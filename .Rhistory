devtools::document()
devtools::install()
yolo = 4
library(replicaToolkitR)
library(tidyverse)
library(sf)
library(here)
library(log4r)
library(bigrquery)
library(gauntlet)
library(replicaToolkitR)
library(wellknown)
query_network_trip_using_bbox(
bb_network_layer = 'data/req_dev/study_area_network.shp'
,bb_sa_layer = 'data/req_dev/study_area_network.shp'
,network_table = "replica-customer.northwest.northwest_2021_Q4_network_segments"
,trip_table = "replica-customer.northwest.northwest_2021_Q4_thursday_trip"
,customer_name = "replica-customer"
,file_destination = "data/req_dev"
,max_record = Inf
,query_links = c("highway", "corridor", "road", "motorway", "motorway_link", "trunk",
"trunk_link", "primary", "primary_link", "secondary", "secondary_link")
)
library(replicaToolkitR)
query_network_trip_using_bbox(
bb_network_layer = 'data/req_dev/study_area_network.shp'
,bb_sa_layer = 'data/req_dev/study_area_network.shp'
,network_table = "replica-customer.northwest.northwest_2021_Q4_network_segments"
,trip_table = "replica-customer.northwest.northwest_2021_Q4_thursday_trip"
,customer_name = "replica-customer"
,file_destination = "data/req_dev"
,max_record = Inf
,query_links = c("highway", "corridor", "road", "motorway", "motorway_link", "trunk",
"trunk_link", "primary", "primary_link", "secondary", "secondary_link")
)
qs_log_inputs = stringr::str_glue("{make_space()}\nLogging Query Inputs\nPath to network boundary file: {bb_network_layer}\nPath to study area boundary file: {bb_sa_layer}\nCutsomer Name: {customer_name}\nSchema Table: {trip_table}\nLinks Provided:{make_space('-', n = 10)}\n{paste0(str_glue('{sort(query_links)}'),collapse = '\n')}{make_space('-', n = 10)}")
library(replicaToolkitR)
library(replicaToolkitR)
library(tidyverse)
library(sf)
library(here)
library(log4r)
library(bigrquery)
library(gauntlet)
library(replicaToolkitR)
library(wellknown)
query_network_trip_using_bbox(
bb_network_layer = 'data/req_dev/study_area_network.shp'
,bb_sa_layer = 'data/req_dev/study_area_network.shp'
,network_table = "replica-customer.northwest.northwest_2021_Q4_network_segments"
,trip_table = "replica-customer.northwest.northwest_2021_Q4_thursday_trip"
,customer_name = "replica-customer"
,file_destination = "data/req_dev"
,max_record = Inf
,query_links = c("highway", "corridor", "road", "motorway", "motorway_link", "trunk",
"trunk_link", "primary", "primary_link", "secondary", "secondary_link")
)
library(replicaToolkitR)
query_network_trip_using_bbox(
bb_network_layer = 'data/req_dev/study_area_network.shp'
,bb_sa_layer = 'data/req_dev/study_area_network.shp'
,network_table = "replica-customer.northwest.northwest_2021_Q4_network_segments"
,trip_table = "replica-customer.northwest.northwest_2021_Q4_thursday_trip"
,customer_name = "replica-customer"
,file_destination = "data/req_dev"
,max_record = Inf
,query_links = c("highway", "corridor", "road", "motorway", "motorway_link", "trunk",
"trunk_link", "primary", "primary_link", "secondary", "secondary_link")
)
query_network_trip_using_bbox(
bb_network_layer = 'data/req_dev/study_area_network.shp'
,bb_sa_layer = 'data/req_dev/study_area_network.shp'
,network_table = "replica-customer.northwest.northwest_2021_Q4_network_segments"
,trip_table = "replica-customer.northwest.northwest_2021_Q4_thursday_trip"
,customer_name = "replica-customer"
,file_destination = "data/req_dev"
,max_record = Inf
,query_links = c("highway", "corridor", "road", "motorway", "motorway_link", "trunk",
"trunk_link", "primary", "primary_link", "secondary", "secondary_link")
)
message(str_glue("If your selection has resulted in too many records, you can............
1) Decrease the study area layer resulting in less originating polys
2) Decrease the size of the network layer supplied to the function
3) Reduce the number of link types queired by the function by changing query_links input"))
library(replicaToolkitR)
query_network_trip_using_bbox(
bb_network_layer = 'data/req_dev/study_area_network.shp'
,bb_sa_layer = 'data/req_dev/study_area_network.shp'
,network_table = "replica-customer.northwest.northwest_2021_Q4_network_segments"
,trip_table = "replica-customer.northwest.northwest_2021_Q4_thursday_trip"
,customer_name = "replica-customer"
,file_destination = "data/req_dev"
,max_record = Inf
,query_links = c("highway", "corridor", "road", "motorway", "motorway_link", "trunk",
"trunk_link", "primary", "primary_link", "secondary", "secondary_link")
)
replicaToolkitR::get_tigris_polys_from_replica_index(
location = "data/req_dev"
,folder = "data_20230112_143236"
,states = "WA"
,auto_save = T
)
"data/req_dev/data_20230112_143236/replica_trip_agg_by_link_subset.csv" %>%
here::here() %>%
data.table::fread()
temp = "data/req_dev/data_20230112_143236/replica_trip_agg_by_link_subset.csv" %>%
here::here() %>%
data.table::fread()
length(unique(temp$origin_poly))
length(unique(temp$network_link_ids_unnested))
replica_queried_network = "data/req_dev/data_20230112_143236/replica_queried_network.csv" %>%
here::here() %>%
data.table::fread()
replica_queried_network
replica_queried_network
length(unique(replica_queried_network$stableEdgeId ))
length(unique(temp$origin_poly))
length(unique(temp$network_link_ids_unnested))
replica_trip_agg_by_link_subset = here::here(location, folder, "replica_trip_agg_by_link_subset.csv") %>%
data.table::fread()
location
location = "data/req_dev"
folder = "data_20230112_143236"
replica_trip_agg_by_link_subset = here::here(location, folder, "replica_trip_agg_by_link_subset.csv") %>%
data.table::fread()
replica_queried_network = here::here(location, folder, "replica_queried_network.csv") %>%
data.table::fread()
replica_trip_agg_by_link_subset
length(unique(temp$network_link_ids_unnested))
length(unique(replica_queried_network$stableEdgeId))
replica_trip_agg_by_link_subset = here::here(location, folder, "replica_trip_agg_by_link_subset.csv") %>%
data.table::fread()
check_subset_agg = length(unique(temp$network_link_ids_unnested))
replica_queried_network = here::here(location, folder, "replica_queried_network.csv") %>%
data.table::fread()
check_subset = llength(unique(replica_queried_network$stableEdgeId))
check_subset = length(unique(replica_queried_network$stableEdgeId))
str_glue("The replica network link aggregate table returned {check_subset_agg} unique network links")
str_glue("The replica network link aggregate table returned\n---{check_subset_agg} unique network links\n
The network subset download returned\n---{check_subset_agg} unique network links")
str_glue("The replica network link aggregate table returned\n---{check_subset_agg} unique network links\nThe network subset download returned\n---{check_subset} unique network links")
str_glue("The replica network link aggregate table returned\n---{check_subset_agg} unique network links\nThe network subset download returned\n---{check_subset} unique network links
\n{100*dgt3(check_subset_agg/check_subset)}%")
str_glue("The replica network link aggregate table returned\n---{check_subset_agg} unique network links\nThe network subset download returned\n---{check_subset} unique network links
\n{100*dgt3(check_subset_agg/check_subset)}% of queried links have trip counts associated with them")
str_glue("The replica network link aggregate table returned {check_subset_agg} unique network links\nThe network subset download returned {check_subset} unique network links
\n{100*dgt3(check_subset_agg/check_subset)}% of queried links have trip counts associated with them")
str_glue("The replica network link aggregate table returned {check_subset_agg} unique network links\nThe network subset download returned {check_subset} unique network links
{make_space('-')}{100*dgt3(check_subset_agg/check_subset)}% of queried links have trip counts associated with them")
str_glue("The replica network link aggregate table returned {check_subset_agg} unique network links\nThe network subset download returned {check_subset} unique network links
{make_space('-')}\n{100*dgt3(check_subset_agg/check_subset)}% of queried links have trip counts associated with them")
str_glue("The replica network link aggregate table returned {check_subset_agg} unique network links\nThe network subset download returned {check_subset} unique network links{make_space('-')}\n{100*dgt3(check_subset_agg/check_subset)}% of queried links have trip counts associated with them{make_space('-')}")
check_links_download = function(location, folder){
location = "data/req_dev"
folder = "data_20230112_143236"
replica_trip_agg_by_link_subset = here::here(location, folder, "replica_trip_agg_by_link_subset.csv") %>%
data.table::fread()
check_subset_agg = length(unique(temp$network_link_ids_unnested))
replica_queried_network = here::here(location, folder, "replica_queried_network.csv") %>%
data.table::fread()
check_subset = length(unique(replica_queried_network$stableEdgeId))
str_glue("The replica network link aggregate table returned {check_subset_agg} unique network links\nThe network subset download returned {check_subset} unique network links{make_space('-')}\n{100*dgt3(check_subset_agg/check_subset)}% of queried links have trip counts associated with them{make_space('-')}")
}
check_links_download = function(location, folder){
# location = "data/req_dev"
# folder = "data_20230112_143236"
replica_trip_agg_by_link_subset = here::here(location, folder, "replica_trip_agg_by_link_subset.csv") %>%
data.table::fread()
check_subset_agg = length(unique(temp$network_link_ids_unnested))
replica_queried_network = here::here(location, folder, "replica_queried_network.csv") %>%
data.table::fread()
check_subset = length(unique(replica_queried_network$stableEdgeId))
str_glue("The replica network link aggregate table returned {check_subset_agg} unique network links\nThe network subset download returned {check_subset} unique network links{make_space('-')}\n{100*dgt3(check_subset_agg/check_subset)}% of queried links have trip counts associated with them{make_space('-')}")
}
check_links_download = function(location, folder){
# location = "data/req_dev"
# folder = "data_20230112_143236"
replica_trip_agg_by_link_subset = here::here(location, folder, "replica_trip_agg_by_link_subset.csv") %>%
data.table::fread()
check_subset_agg = length(unique(temp$network_link_ids_unnested))
replica_queried_network = here::here(location, folder, "replica_queried_network.csv") %>%
data.table::fread()
check_subset = length(unique(replica_queried_network$stableEdgeId))
str_glue("The replica network link aggregate table returned {check_subset_agg} unique network links\nThe network subset download returned {check_subset} unique network links{make_space('-')}\n{100*dgt3(check_subset_agg/check_subset)}% of queried links have trip counts associated with them{make_space('-')}")
}
check_links_download()
Q
check_links_download(  location = "data/req_dev"
,folder = "data_20230112_143236")
bq_project_query(
str_glue("select * from limit 5")
replica_temp_tbl_name(table_agg_by_link_subset)
)
table_agg_by_link_subset
yolo = bq_project_query(
str_glue("select * replica-customer._d48ded622e745d9120443120b79c81a0aee797b2.anonecc14ca2dae0a035c31237f7987343566e44365f2e82031fc70d40cb11a325e3 from limit 5")
)
yolo = bq_project_query(
"replica-customer"
,str_glue("select * replica-customer._d48ded622e745d9120443120b79c81a0aee797b2.anonecc14ca2dae0a035c31237f7987343566e44365f2e82031fc70d40cb11a325e3 from limit 5")
)
yolo = bq_project_query(
"replica-customer"
,str_glue("select * from replica-customer._d48ded622e745d9120443120b79c81a0aee797b2.anonecc14ca2dae0a035c31237f7987343566e44365f2e82031fc70d40cb11a325e3 from limit 5")
)
yolo = bq_project_query(
"replica-customer"
,str_glue("select * from replica-customer._d48ded622e745d9120443120b79c81a0aee797b2.anonecc14ca2dae0a035c31237f7987343566e44365f2e82031fc70d40cb11a325e3 limit 5")
)
yolo
yolo = bq_table_download(
"replica-customer"
,str_glue("select * from replica-customer._d48ded622e745d9120443120b79c81a0aee797b2.anonecc14ca2dae0a035c31237f7987343566e44365f2e82031fc70d40cb11a325e3 limit 5")
)
yolo = bq_dataset_query(
"replica-customer"
,str_glue("select * from replica-customer._d48ded622e745d9120443120b79c81a0aee797b2.anonecc14ca2dae0a035c31237f7987343566e44365f2e82031fc70d40cb11a325e3 limit 5")
)
table_agg_by_link_sum_subset
library(replicaToolkitR)
devtools::document()
devtools::install()
# table_simple_origin_destination = bq_table_download(table_simple_origin_destination)
table_simple_origin_destination = bq_table_download("replica-customer._d48ded622e745d9120443120b79c81a0aee797b2.anon112074500f13439467d263c86fb084b46f66325d2df5bb671fbf3832fa02726c")
# table_simple_origin_destination = bq_table_download(table_simple_origin_destination)
table_simple_origin_destination = "C:/Users/USMG687637/Documents/071_projects/replica_testing/data/req_dev/data_20230112_165230/replica_trip_origin_destination.csv" %>%  data.table::fread()
library(tidyverse)
library(sf)
library(here)
library(log4r)
library(bigrquery)
library(gauntlet)
library(replicaToolkitR)
library(wellknown)
# table_simple_origin_destination = bq_table_download(table_simple_origin_destination)
table_simple_origin_destination = "C:/Users/USMG687637/Documents/071_projects/replica_testing/data/req_dev/data_20230112_165230/replica_trip_origin_destination.csv" %>%  data.table::fread()
od_agg = table_simple_origin_destination %>%
group_by(vehicle_type, origin_poly) %>%
summarise(sum = sum(count))
od_agg = table_simple_origin_destination %>%
group_by(vehicle_type, origin_poly) %>%
summarise(count_from_od_table = sum(count)) %>%
ungroup()
od_agg
block_groups
block_groups = tigris::block_groups(state = "WA", year = 2010)
table_trip_first_link_pro = = "C:/Users/USMG687637/Documents/071_projects/replica_testing/data/req_dev/data_20230112_165230/replica_trip_origin_links.csv" %>%  data.table::fread()
table_trip_first_link_pro = "C:/Users/USMG687637/Documents/071_projects/replica_testing/data/req_dev/data_20230112_165230/replica_trip_origin_links.csv" %>%  data.table::fread()
table_trip_first_link_pro
od_agg
table_trip_first_link_pro
block_groups %>%
merge(od_agg %>%
filter(str_detect(vehicle_type, "MED")), all.x = T
,by.x = "GEOID10", by.y = "origin_poly") %>%
mutate(sum = replace_na(sum, 0))
table_trip_first_link_pro
od_agg
table_trip_first_link_pro %>%
group_by(vehicle_type, origin_poly) %>%
summarise(count_from_first_links = sum(count))
od_agg %>%
merge(.
,table_trip_first_link_pro %>%
group_by(vehicle_type, origin_poly) %>%
summarise(count_from_first_links = sum(count)) %>%
ungroup()
,by = c('vehicle_type', 'origin_poly')
)
od_agg %>%
merge(.
,table_trip_first_link_pro %>%
group_by(vehicle_type, origin_poly) %>%
summarise(count_from_first_links = sum(count)) %>%
ungroup()
,by = c('vehicle_type', 'origin_poly')
) %>%
mutate(flag_check = sum == count_yolo) %>%
count(flag_check)
od_agg %>%
merge(.
,table_trip_first_link_pro %>%
group_by(vehicle_type, origin_poly) %>%
summarise(count_from_first_links = sum(count)) %>%
ungroup()
,by = c('vehicle_type', 'origin_poly')
) %>%
mutate(flag_check = (count_from_od_table == count_from_first_links)) %>%
count(flag_check)
od_agg
table_trip_first_link_pro %>%
group_by(vehicle_type, origin_poly) %>%
summarise(count_from_first_links = sum(count)) %>%
ungroup()
od_agg %>%
merge(.
,table_trip_first_link_pro %>%
group_by(vehicle_type, origin_poly) %>%
summarise(count_from_first_links = sum(count)) %>%
ungroup()
,by = c('vehicle_type', 'origin_poly')
) %>%
mutate(flag_check_same_origin_counts = (count_from_od_table == count_from_first_links)) %>%
count(flag_check)
od_agg %>%
merge(.
,table_trip_first_link_pro %>%
group_by(vehicle_type, origin_poly) %>%
summarise(count_from_first_links = sum(count)) %>%
ungroup()
,by = c('vehicle_type', 'origin_poly')
) %>%
mutate(flag_check_same_origin_counts = (count_from_od_table == count_from_first_links)) %>%
count(flag_check_same_origin_counts)
od_agg %>%
merge(.
,table_trip_first_link_pro %>%
group_by(vehicle_type, origin_poly) %>%
summarise(count_from_first_links = sum(count)) %>%
ungroup()
,by = c('vehicle_type', 'origin_poly')
) %>%
mutate(flag_check_same_origin_counts = (count_from_od_table == count_from_first_links)) %>%
ungroup()
od_agg %>%
merge(.
,table_trip_first_link_pro %>%
group_by(vehicle_type, origin_poly) %>%
summarise(count_from_first_links = sum(count)) %>%
ungroup()
,by = c('vehicle_type', 'origin_poly')
) %>%
mutate(flag_check_same_origin_counts = (count_from_od_table == count_from_first_links)) %>%
ungroup() %>%
count(vehicle_type, flag_check_same_origin_counts)
od_agg %>%
merge(.
,table_trip_first_link_pro %>%
group_by(vehicle_type, origin_poly) %>%
summarise(count_from_first_links = sum(count)) %>%
ungroup()
,by = c('vehicle_type', 'origin_poly')
) %>%
mutate(flag_check_same_origin_counts = (count_from_od_table == count_from_first_links)) %>%
ungroup() %>%
count(vehicle_type, flag_check_same_origin_counts) %>%
ungroup()
od_agg = table_simple_origin_destination %>%
group_by(vehicle_type, origin_poly) %>%
summarise(count_from_od_table = sum(count)) %>%
ungroup()
origin_link_agg = table_trip_first_link_pro %>%
group_by(vehicle_type, origin_poly) %>%
summarise(count_from_first_links = sum(count)) %>%
ungroup()
od_agg %>%
merge(.
,origin_link_agg
,by = c('vehicle_type', 'origin_poly')
) %>%
mutate(flag_check_same_origin_counts = (count_from_od_table == count_from_first_links)) %>%
ungroup() %>%
count(vehicle_type, flag_check_same_origin_counts) %>%
ungroup()
od_agg %>%
merge(.
,origin_link_agg
,by = c('vehicle_type', 'origin_poly')
) %>%
mutate(flag_check_same_origin_counts = (count_from_od_table == count_from_first_links)
,count_diff = count_from_od_table - count_from_first_links) %>%
group_by(vehicle_type, flag_check_same_origin_counts) %>%
summarise(count = n())
od_agg %>%
merge(.
,origin_link_agg
,by = c('vehicle_type', 'origin_poly')
) %>%
mutate(flag_check_same_origin_counts = (count_from_od_table == count_from_first_links)
,count_diff = count_from_od_table - count_from_first_links) %>%
group_by(vehicle_type, flag_check_same_origin_counts) %>%
summarise(count = n()
,count_diff_avg = mean(count_diff))
od_agg %>%
merge(.
,origin_link_agg
,by = c('vehicle_type', 'origin_poly')
) %>%
mutate(flag_check_same_origin_counts = (count_from_od_table == count_from_first_links)
,count_diff = count_from_od_table - count_from_first_links) %>%
group_by(vehicle_type, flag_check_same_origin_counts) %>%
summarise(count = n()
,count_diff_avg = mean(count_diff)
,count_diff_med = median(count_diff)
,count_diff_sdd = sd(count_diff))
od_agg %>%
merge(.
,origin_link_agg
,by = c('vehicle_type', 'origin_poly')
) %>%
mutate(flag_check_same_origin_counts = (count_from_od_table == count_from_first_links)
,count_diff = count_from_od_table - count_from_first_links) %>%
group_by(vehicle_type, flag_check_same_origin_counts) %>%
summarise(count = n()
,count_diff_avg = mean(count_diff)
,count_diff_med = median(count_diff)
,count_diff_sd = sd(count_diff)
,,count_diff_max = max(count_diff))
od_agg %>%
merge(.
,origin_link_agg
,by = c('vehicle_type', 'origin_poly')
) %>%
mutate(flag_check_same_origin_counts = (count_from_od_table == count_from_first_links)
,count_diff = count_from_od_table - count_from_first_links) %>%
group_by(vehicle_type, flag_check_same_origin_counts) %>%
summarise(count = n()
,count_diff_avg = mean(count_diff)
,count_diff_med = median(count_diff)
,count_diff_sd = sd(count_diff)
,,count_diff_max = max(count_diff))
od_agg %>%
merge(.
,origin_link_agg
,by = c('vehicle_type', 'origin_poly')
) %>%
mutate(flag_check_same_origin_counts = (count_from_od_table == count_from_first_links)
,count_diff = count_from_od_table - count_from_first_links) %>%
group_by(vehicle_type, flag_check_same_origin_counts) %>%
summarise(count = n()
,count_diff_avg = mean(count_diff)
,count_diff_med = median(count_diff)
,count_diff_sd = sd(count_diff)
,count_diff_max = max(count_diff)
,count_diff_max = max(count_diff/count_from_first_links))
od_agg %>%
merge(.
,origin_link_agg
,by = c('vehicle_type', 'origin_poly')
) %>%
mutate(flag_check_same_origin_counts = (count_from_od_table == count_from_first_links)
,count_diff = count_from_od_table - count_from_first_links) %>%
group_by(vehicle_type, flag_check_same_origin_counts) %>%
summarise(count = n()
,count_diff_avg = mean(count_diff)
,count_diff_med = median(count_diff)
,count_diff_sd = sd(count_diff)
,count_diff_max = max(count_diff)
,count_diff_max_pct = max(count_diff/count_from_first_links))
od_agg %>%
mutate(count_from_od_table = count_from_od_table + 5)
od_agg %>%
mutate(count_from_od_table = count_from_od_table + 5) %>%
merge(.
,origin_link_agg
,by = c('vehicle_type', 'origin_poly')
) %>%
mutate(flag_check_same_origin_counts = (count_from_od_table == count_from_first_links)
,count_diff = count_from_od_table - count_from_first_links) %>%
group_by(vehicle_type, flag_check_same_origin_counts) %>%
summarise(count = n()
,count_diff_avg = mean(count_diff)
,count_diff_med = median(count_diff)
,count_diff_sd = sd(count_diff)
,count_diff_max = max(count_diff)
,count_diff_max_pct = max(count_diff/count_from_first_links))
od_agg %>%
mutate(count_from_od_table = count_from_od_table + (count_from_od_table*.24)) %>%
merge(.
,origin_link_agg
,by = c('vehicle_type', 'origin_poly')
) %>%
mutate(flag_check_same_origin_counts = (count_from_od_table == count_from_first_links)
,count_diff = count_from_od_table - count_from_first_links) %>%
group_by(vehicle_type, flag_check_same_origin_counts) %>%
summarise(count = n()
,count_diff_avg = mean(count_diff)
,count_diff_med = median(count_diff)
,count_diff_sd = sd(count_diff)
,count_diff_max = max(count_diff)
,count_diff_max_pct = max(count_diff/count_from_first_links))
location = "C:/Users/USMG687637/Documents/071_projects/replica_testing/data/req_dev"
folder = "data_20230112_165230"
table_simple_origin_destination = here::here(location, folder, "replica_trip_origin_destination.csv") %>%
data.table::fread()
table_trip_first_link_pro = here::here(location, folder, "replica_trip_origin_links.csv") %>%
data.table::fread()
od_agg = table_simple_origin_destination %>%
group_by(vehicle_type, origin_poly) %>%
summarise(count_from_od_table = sum(count)) %>%
ungroup()
origin_link_agg = table_trip_first_link_pro %>%
group_by(vehicle_type, origin_poly) %>%
summarise(count_from_first_links = sum(count)) %>%
ungroup()
od_agg %>%
merge(.
,origin_link_agg
,by = c('vehicle_type', 'origin_poly')
) %>%
mutate(flag_check_same_origin_counts = (count_from_od_table == count_from_first_links)
,count_diff = count_from_od_table - count_from_first_links) %>%
group_by(vehicle_type, flag_check_same_origin_counts) %>%
summarise(count = n()
,count_diff_avg = mean(count_diff)
,count_diff_med = median(count_diff)
,count_diff_sd = sd(count_diff)
,count_diff_max = max(count_diff)
,count_diff_max_pct = max(count_diff/count_from_first_links))
library(replicaToolkitR)
devtools::document()
devtools::install()
