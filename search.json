[{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/replica_hotspot.html","id":"intro","dir":"Articles","previous_headings":"","what":"Intro","title":"KDE and Hotspot Workflow","text":"vignette shows run Kernel Density Estimate (KDE) Hotspot analysis using data retrieved using replicaToolkitR package. goal document present complete analysis showcase easily implement analyses using data products created replicaToolkitR Replica. NOTE: vignette uses data comes replicaToolkitR, user precursory understanding acquire data using replicaToolkitR::query_network_trip_using_bbox().","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/replica_hotspot.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set-Up","title":"KDE and Hotspot Workflow","text":"packages ’ll need vignette.","code":"library(here) # library(tidyverse) library(dplyr) library(stringr) library(magrittr) library(purrr)  library(leaflet) library(leaflet.extras2) library(mapview) library(sf)  library(SpatialKDE) library(sfhotspot)  library(replicaToolkitR) library(gauntlet) #https://github.com/michaelgaunt404/gauntlet"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/replica_hotspot.html","id":"data-overview","dir":"Articles","previous_headings":"","what":"Data Overview","title":"KDE and Hotspot Workflow","text":"data used analysis acquired using study area bounding box seen . Note: trip travelling though zone queried via replicaToolkitR. done account vehicles traveling study area network links. full list trips queried listed : internal--internal: study area study area trips internal--external: study area external trips external--internal: external study area trips external--external: external external trips (trips) replicaToolkitR, however; filters trips originate within study area polygon displaying aggregating anything regarding trip origins. map details trip origins counts aggregated trips first network link. Links case displayed points determined starting coordinates. Normally, data loaded replica_trip_origin_links.gpkg file user creates querying Google instance loaded package.","code":"data(\"replica_trip_origin_links_gpkg\")  replica_trip_origin_links_fltrd = replica_trip_origin_links_gpkg %>%     st_filter(study_area_network) %>%     st_transform(crs = 32610)"},{"path":[]},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/replica_hotspot.html","id":"data-prep","dir":"Articles","previous_headings":"KDE and Hotspot","what":"Data Prep","title":"KDE and Hotspot Workflow","text":"SpatialKDE sfhotspot packages used perform KDE analysis. latter built upon former provides convenience wrappers don’t want get get nitty-gritty function options. used vignette. First, create grid covers spread data. case, cell size 200 meters chosen roughly size city blocks Seattle good unit analysis. water around city removed using tigris package. important step, make distinction location generate trips one incapable generating trips - .e. freight trips start middle Lake Washington. grids displayed map. grid removed water features seen right panel: can see perfect; Green Lake, Union Bay water features removed. addition, idea can extended locations incapable generating trips parks, universities, airport tarmac, etc. R package mapedit provides functions allow user easily draw create polygons can used remove non-trip generating similar water removal . vignette cover .","code":"grid_sm = create_grid_hexagonal(   replica_trip_origin_links_fltrd   ,cell_size = 200) grid_sm_water_removed = tigris::erase_water(grid_sm) %>%   st_cast(\"POLYGON\")"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/replica_hotspot.html","id":"analysis-execution","dir":"Articles","previous_headings":"KDE and Hotspot","what":"Analysis Execution","title":"KDE and Hotspot Workflow","text":"code runs **hotspot_kde()** function different vehicle types data using different grids previously created. **purrr::pmap()** function allows us iterate multiple arguments simultaneously resulting list object (saves us bunch key strokes!). resulting 2D kernel density estimates trip origins heavy (left panel) medium (right panel) duty vehicles displayed : results pretty interesting - rather dramatic difference heavy medium duty trucks go Seattle. Heavy duty trucks stick ports, medium duty tricks distributed Seattle (’re smaller can get around easier, makes sense!). analysis can extended using hotspot_gistar() function, allows us easily calculate gi-star Z-score statistic used identifying clusters point locations. theory behind statistic covered reviewed implementing . map depicts result calculating gi-star Z-score statistic. Statistically significant hot cold locations displayed: just using default input options, get pretty interesting findings. see rather large cold spots Green Lake, Union Bay, Discovery Park (west Magnolia) - makes sense first two locations bodies water third large wooded park freight trucks don’t go. comparison neighbors, locations especially cold regions trucks identified. One take findings remove areas subsequent analysis iterations.","code":"hotspot_obeject = list(   list(\"MEDIUM_COMMERCIAL\", \"MEDIUM_COMMERCIAL\", \"HEAVY_COMMERCIAL\", \"HEAVY_COMMERCIAL\")   ,list(grid_sm_water_removed, grid_sm, grid_sm_water_removed, grid_sm) ) %>%   pmap(~{     temp_hotspot = replica_trip_origin_links_fltrd %>%       filter(vehicle_type == .x) %>%       hotspot_kde(         data = .         ,grid = .y         ,weights = count         ,bandwidth = 800) %>%       mutate(kde_norm = gauntlet::normalize_min_max(kde)) %>%       mutate(label = str_glue(\"KDE (Min-Max Norm): {dgt2(kde_norm)}<br>KDE (raw): {dgt2(kde)}<br>TTL Trips: {sum}\")) %>%       st_transform(crs = 4326)   }) temp_hotspot = replica_trip_origin_links_fltrd %>%       filter(vehicle_type == \"MEDIUM_COMMERCIAL\") %>%       hotspot_gistar(         data = .         ,grid = grid_sm_water_removed         ,weights = count         ,bandwidth = 800) temp_hotspot %>%   filter(pvalue <= .01) %>%   mutate(flag_gistar = case_when(gistar > 0~\"Hot\", T~\"Cold\")) %>%   mapview(layer.name = \"Hotspots\", zcol = \"flag_gistar\")"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/replica_hotspot.html","id":"considerations","dir":"Articles","previous_headings":"","what":"Considerations","title":"KDE and Hotspot Workflow","text":"simple vignette intended highlight specific workflow stemming data acquired replicaToolkitR package. detailed analysis, one consider: help prevent identifying spurious hot/cold locations proper unit measure grid bandwidth used KDE gistar calculations default quadratic kernel used others can specified impacts whether cell statistically varies neighbors altering impact size shape hot cold spots ***","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mike Gaunt. Maintainer.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gaunt M (2023). replicaToolkitR: Easily query process Replica data.. R package version 0.1.0, https://michaelgaunt404.github.io/replicaToolkitR/.","code":"@Manual{,   title = {replicaToolkitR: Easily query and process Replica data.},   author = {Mike Gaunt},   year = {2023},   note = {R package version 0.1.0},   url = {https://michaelgaunt404.github.io/replicaToolkitR/}, }"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/index.html","id":"replicatoolkitr","dir":"","previous_headings":"","what":"Easily query and process Replica data.","title":"Easily query and process Replica data.","text":"R package provides set functions allow user query process Replica data. Using user inputs, SQL queries area made Replica BigQuery database. results queries returned user form CSVs. Convience functions used convert tabular data spatial SF objects. usage package requires user account Replica.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easily query and process Replica data.","text":"Install development version GitHub:","code":"# install.packages(\"devtools\") devtools::install_github(\"michaelgaunt404/replicaToolkitR\")"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Easily query and process Replica data.","text":"Load package. run function query_network_trip_using_bbox() query replica database given supplid inputs. function run , times, ask inputs either continue terminate run.","code":"library(replicaToolkitR) query_network_trip_using_bbox(   bb_network_layer = 'data/req_dev/study_area_network.shp'   ,bb_sa_layer = 'data/req_dev/study_area_network.shp'   ,network_table = \"replica-customer.northwest.northwest_2021_Q4_network_segments\"   ,trip_table = \"replica-customer.northwest.northwest_2021_Q4_thursday_trip\"   ,customer_name = \"replica-customer\"   ,file_destination = \"data/req_dev\"   ,max_record = Inf   ,query_links = c(\"highway\", \"corridor\", \"road\", \"motorway\", \"motorway_link\", \"trunk\",                    \"trunk_link\", \"primary\", \"primary_link\", \"secondary\", \"secondary_link\") )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/index.html","id":"output","dir":"","previous_headings":"","what":"Output","title":"Easily query and process Replica data.","text":"completed, queried data written location defined input file_destination. 6 files written, : log_file: Simple text file logging events run. Records table IDs temporary tables made Google BigQuery table run. can accessed later. replica_queried_network: network queried user. user asked want download file - can rather large given query inputs. replica_sa_poly_index: table containg polygons found within user supplied bb_sa_layer polygon. replica_trip_origin_destination: table containing counts vehicles aggregated origin polygon, destination polygon, vehicle type. Origins destinations outside study area collapsed single level called study area. replica_trip_origin_links: table containg counts vehicle given origin polygon starting network link. data set provides precise view vehicle starting locations rather origin polygon (usually census block groups). useful performing hotspot analyses calcualting kernel desnity estimates (KDEs). table_agg_by_link_subset_limited: table detailing network link volumes given day aggregated origin polygon network link data listed save CSVs. Conveince functions provided convert tabular data spatial data save GPKG RDS files. Resulting files folder data acquisition.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/index.html","id":"data-processing","dir":"","previous_headings":"","what":"Data Processing","title":"Easily query and process Replica data.","text":"indcated , replicaToolkitR provides convience functions convert tabular data acquired query_network_trip_using_bbox() spatail format conducive mapping. NOTE: functions section can supplied object transfrom location/folder inputs point data saved. latter supplied function go automatically load whatever file function calls . Suppling object directly compataible targets package workflow. Acquire origin polygons tigris census API package using replica_sa_poly_index. Make SF linestring spatial object network links. Make SF point spatial object extracting center points network links. SF point spatial object trip first link aggregation table. Make RDS list object containg network link counts aggregated three different pre-set ways. image shows saved files designated folder processing.  NOTE: functions always return object. choose auto_save still returned result. advised auto_save object point naming conventions respected.","code":"data(\"replica_sa_poly_index\")  get_tigris_polys_from_replica_index(   network_object = replica_sa_poly_index   ,states = \"WA\"   ,auto_save = F ) data(\"replica_queried_network\")  make_network_link_layer(   network_object = replica_queried_network   ,auto_save = F ) data(\"replica_queried_network\")  make_network_centroid_layer(   network_object = replica_queried_network_links   ,auto_save = F ) data(\"replica_trip_origin_links\")  make_trip_origin_point_layer(   first_links_object = replica_trip_origin_links   ,auto_save = F ) data(\"table_agg_by_link_subset_limited\")  aggregate_network_links(   network_object = table_agg_by_link_subset_limited   ,auto_save = F )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/aggregate_network_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Quickly make network link aggregate objects. — aggregate_network_links","title":"Quickly make network link aggregate objects. — aggregate_network_links","text":"function makes RDS list object containing network link layers aggreated three different pre-set ways. data contained `table_agg_by_link_subset_limited` aggregated : + network_link flag_sa_destination + network_link_ids_unnested vehicle_type + network_link_ids_unnested, origin_poly, vehicle_type","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/aggregate_network_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quickly make network link aggregate objects. — aggregate_network_links","text":"","code":"aggregate_network_links(location, folder, auto_save = F, network_object = NULL)"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/aggregate_network_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quickly make network link aggregate objects. — aggregate_network_links","text":"location character string pointing top level location data acquired google saved . folder character string name data automatically saved google data download. auto_save boolean (T/F - default F) indicating want GIS layer saved. Default just creates object without saving. network_object network object containing links. Default NULL input left empty - function use location folder inputs load object convert.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/aggregate_network_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quickly make network link aggregate objects. — aggregate_network_links","text":"data frame /saved RDS file","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/aggregate_network_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quickly make network link aggregate objects. — aggregate_network_links","text":"","code":"#none"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/get_tigris_polys_from_replica_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Get polygons using Replica study area poly index. — get_tigris_polys_from_replica_index","title":"Get polygons using Replica study area poly index. — get_tigris_polys_from_replica_index","text":"Get polygons using Replica study area poly index.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/get_tigris_polys_from_replica_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get polygons using Replica study area poly index. — get_tigris_polys_from_replica_index","text":"","code":"get_tigris_polys_from_replica_index(   location,   folder,   auto_save = F,   network_object = NULL,   states,   year = 2010 )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/get_tigris_polys_from_replica_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get polygons using Replica study area poly index. — get_tigris_polys_from_replica_index","text":"location character string pointing top level location data acquired google saved . folder character string name data automatically saved google data download. auto_save boolean (T/F - default F) indicating want GIS layer saved. Default just creates object without saving. network_object network object containing links. Default NULL input left empty - function use location folder inputs load object convert. states character string vector character string state two letter abbreviations indicating states get polys . year integer indicating year census polys acquired. Replica uses 2010 functions default 2010, change .","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/get_tigris_polys_from_replica_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get polygons using Replica study area poly index. — get_tigris_polys_from_replica_index","text":"spatial object containing polygons study area polygons acquired Replica.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/get_tigris_polys_from_replica_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get polygons using Replica study area poly index. — get_tigris_polys_from_replica_index","text":"","code":"#none"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/inspect_queried_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Quickly map and inspect queried network links — inspect_queried_network","title":"Quickly map and inspect queried network links — inspect_queried_network","text":"convenience function maps network queried given user inputs. Replica uses uncommon naming conventions links link types. can beneficial inspect links queried ensure including links car analyis. function creates **crosstalk object** - client-side, interactive, filterable HTML widget. effectively bite-size dashboard helps better understand network. can filter links link type street name. > **_NOTE:_** Network links mapped link _centroids_ - due quirk given packages needed create feature.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/inspect_queried_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quickly map and inspect queried network links — inspect_queried_network","text":"","code":"inspect_queried_network(location, folder, network_links_object = NULL)"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/inspect_queried_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quickly map and inspect queried network links — inspect_queried_network","text":"location character string pointing top level location data acquired google saved . folder character string name data automatically saved google data download. network_links_object network object containing links. Default NULL input left empty - function use location folder inputs load object convert.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/inspect_queried_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quickly map and inspect queried network links — inspect_queried_network","text":"","code":"data(\"replica_queried_network_links\")  inspect_queried_network(   network_links_object = replica_queried_network_links ) #> Error in make_space(\"-\"): could not find function \"make_space\""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_centroid_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert GIS network links to points by using link centroids. — make_network_centroid_layer","title":"Convert GIS network links to points by using link centroids. — make_network_centroid_layer","text":"HTML packages used creating interactive, client-side visualizations compatible links. function converts GIS links points extracting centroids.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_centroid_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert GIS network links to points by using link centroids. — make_network_centroid_layer","text":"","code":"make_network_centroid_layer(   location,   folder,   auto_save = F,   network_object = NULL )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_centroid_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert GIS network links to points by using link centroids. — make_network_centroid_layer","text":"location character string pointing top level location data acquired google saved . folder character string name data automatically saved Google data download. auto_save boolean (T/F - default F) indicating want GIS layer saved. Default just creates object without saving. network_object network object containing links. Default NULL input left empty - function use location folder inputs load object convert.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_centroid_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert GIS network links to points by using link centroids. — make_network_centroid_layer","text":"GIS layer network CRS 4326","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_centroid_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert GIS network links to points by using link centroids. — make_network_centroid_layer","text":"","code":"data('replica_queried_network_links')  head(replica_queried_network_links) #> Error in FUN(X[[i]], ...): `x` must be a vector, not a <sfc_LINESTRING/sfc> object.  make_network_centroid_layer(   location = \"data/req_dev\"   ,folder = \"data_20230106_154119\"   ,network_object = replica_queried_network_links   ,auto_save = F ) #> Centroids were made using supplied spatial links network object... #> Error in sf_object %>% mutate(merge_id = row_number()): could not find function \"%>%\""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_link_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert tabular network file to gis layer. — make_network_link_layer","title":"Convert tabular network file to gis layer. — make_network_link_layer","text":"network acquired google saved shapefile. function helps converts file CSV GIS layer provides option save GIS object \".gpkg\".","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_link_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert tabular network file to gis layer. — make_network_link_layer","text":"","code":"make_network_link_layer(location, folder, auto_save = F, network_object = NULL)"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_link_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert tabular network file to gis layer. — make_network_link_layer","text":"location character string pointing top level location data acquired google saved . folder character string name data automatically saved google data download. auto_save boolean (T/F - default F) inicating want GIS layer saved. Default just creates object without saving. network_object tabular link data. Default NULL input left empty - function use location folder inputs load object convert.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_link_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert tabular network file to gis layer. — make_network_link_layer","text":"GIS layer network CRS 4326","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_link_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert tabular network file to gis layer. — make_network_link_layer","text":"","code":"data('replica_queried_network')  head(replica_queried_network) #>   stableEdgeId startLat  startLon   endLat    endLon #> 1 1.716380e+19 47.59232 -122.3259 47.59303 -122.3231 #> 2 2.374856e+18 47.53192 -122.3766 47.53336 -122.3766 #> 3 6.003071e+18 47.65612 -122.3021 47.65640 -122.3020 #> 4 1.045799e+19 47.68030 -122.3258 47.68002 -122.3258 #> 5 6.084231e+18 47.66153 -122.3467 47.66126 -122.3468 #> 6 4.999734e+18 47.68306 -122.3003 47.68306 -122.3008 #>                     streetName distance     osmid    speed #> 1                         I 90   224000 621426664 62.11319 #> 2        35th Avenue Southwest   160000 332496923 36.23891 #> 3 Montlake Boulevard Northeast    32000 500504113 46.60353 #> 4  East Green Lake Drive North    32000   6410233 36.23891 #> 5         Green Lake Way North    32000   8026709 36.23891 #> 6        Northeast 75th Street    32000 428091103 36.23891 #>                                          flags lanes   highway #> 1                                 [ALLOWS_CAR]     2  motorway #> 2 [ALLOWS_CAR, ALLOWS_BIKE, ALLOWS_PEDESTRIAN]    -1 secondary #> 3 [ALLOWS_CAR, ALLOWS_BIKE, ALLOWS_PEDESTRIAN]     2   primary #> 4 [ALLOWS_CAR, ALLOWS_BIKE, ALLOWS_PEDESTRIAN]    -1 secondary #> 5                          [ALLOWS_PEDESTRIAN]     0 secondary #> 6 [ALLOWS_CAR, ALLOWS_BIKE, ALLOWS_PEDESTRIAN]    -1 secondary #>                                                                         geometry #> 1 LINESTRING(-122.32587 47.592317, -122.324199 47.592718, -122.323077 47.593035) #> 2                       LINESTRING(-122.376642 47.531919, -122.376609 47.533357) #> 3                        LINESTRING(-122.302087 47.65612, -122.301999 47.656399) #> 4 LINESTRING(-122.325841 47.680297, -122.325787 47.680178, -122.325753 47.68002) #> 5                        LINESTRING(-122.34667 47.661529, -122.346839 47.661261) #> 6                       LINESTRING(-122.300333 47.683056, -122.300754 47.683057) #>   flag_contains #> 1          TRUE #> 2          TRUE #> 3          TRUE #> 4          TRUE #> 5          TRUE #> 6          TRUE  make_network_link_layer(   network_object = replica_queried_network   ,auto_save = F ) #> Spatial links were made using supplied tabular network object... #> Simple feature collection with 25869 features and 13 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: -122.4135 ymin: 47.50069 xmax: -122.2406 ymax: 47.74676 #> Geodetic CRS:  WGS 84 #> First 10 features: #>    stableEdgeId startLat  startLon   endLat    endLon #> 1  1.716380e+19 47.59232 -122.3259 47.59303 -122.3231 #> 2  2.374856e+18 47.53192 -122.3766 47.53336 -122.3766 #> 3  6.003071e+18 47.65612 -122.3021 47.65640 -122.3020 #> 4  1.045799e+19 47.68030 -122.3258 47.68002 -122.3258 #> 5  6.084231e+18 47.66153 -122.3467 47.66126 -122.3468 #> 6  4.999734e+18 47.68306 -122.3003 47.68306 -122.3008 #> 7  3.453132e+18 47.67190 -122.3174 47.67162 -122.3174 #> 8  1.585985e+19 47.66923 -122.3060 47.66930 -122.3056 #> 9  1.425740e+19 47.66865 -122.3622 47.66840 -122.3620 #> 10 1.718644e+19 47.53488 -122.2806 47.53516 -122.2807 #>                             streetName distance     osmid    speed #> 1                                 I 90   224000 621426664 62.11319 #> 2                35th Avenue Southwest   160000 332496923 36.23891 #> 3         Montlake Boulevard Northeast    32000 500504113 46.60353 #> 4          East Green Lake Drive North    32000   6410233 36.23891 #> 5                 Green Lake Way North    32000   8026709 36.23891 #> 6                Northeast 75th Street    32000 428091103 36.23891 #> 7              Roosevelt Way Northeast    32000 421652698 36.23891 #> 8          Northeast Ravenna Boulevard    32000 590421615 36.23891 #> 9              Northwest Market Street    32000 158265863 36.23891 #> 10 Martin Luther King Junior Way South    32000 428291925 36.23891 #>                                           flags lanes   highway flag_contains #> 1                                  [ALLOWS_CAR]     2  motorway          TRUE #> 2  [ALLOWS_CAR, ALLOWS_BIKE, ALLOWS_PEDESTRIAN]    -1 secondary          TRUE #> 3  [ALLOWS_CAR, ALLOWS_BIKE, ALLOWS_PEDESTRIAN]     2   primary          TRUE #> 4  [ALLOWS_CAR, ALLOWS_BIKE, ALLOWS_PEDESTRIAN]    -1 secondary          TRUE #> 5                           [ALLOWS_PEDESTRIAN]     0 secondary          TRUE #> 6  [ALLOWS_CAR, ALLOWS_BIKE, ALLOWS_PEDESTRIAN]    -1 secondary          TRUE #> 7  [ALLOWS_CAR, ALLOWS_BIKE, ALLOWS_PEDESTRIAN]     2 secondary          TRUE #> 8  [ALLOWS_CAR, ALLOWS_BIKE, ALLOWS_PEDESTRIAN]     1 secondary          TRUE #> 9                           [ALLOWS_PEDESTRIAN]     0 secondary          TRUE #> 10 [ALLOWS_CAR, ALLOWS_BIKE, ALLOWS_PEDESTRIAN]     2 secondary          TRUE #>                          geometry #> 1  LINESTRING (-122.3259 47.59... #> 2  LINESTRING (-122.3766 47.53... #> 3  LINESTRING (-122.3021 47.65... #> 4  LINESTRING (-122.3258 47.68... #> 5  LINESTRING (-122.3467 47.66... #> 6  LINESTRING (-122.3003 47.68... #> 7  LINESTRING (-122.3174 47.67... #> 8  LINESTRING (-122.306 47.669... #> 9  LINESTRING (-122.3622 47.66... #> 10 LINESTRING (-122.2806 47.53..."},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_query_and_process_replica_script.html","id":null,"dir":"Reference","previous_headings":"","what":"Make new **Query and Process Replica** script from template. — make_query_and_process_replica_script","title":"Make new **Query and Process Replica** script from template. — make_query_and_process_replica_script","text":"function copies R script template package saves usesr specified location. template basic workflow acquiring processing replica data.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_query_and_process_replica_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make new **Query and Process Replica** script from template. — make_query_and_process_replica_script","text":"","code":"make_query_and_process_replica_script(folder = \"code\", file_name = NULL)"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_query_and_process_replica_script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make new **Query and Process Replica** script from template. — make_query_and_process_replica_script","text":"folder string indicating file saved. file_name string name (include .r extension)","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_query_and_process_replica_script.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make new **Query and Process Replica** script from template. — make_query_and_process_replica_script","text":"script location name choosen user","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_query_and_process_replica_script.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make new **Query and Process Replica** script from template. — make_query_and_process_replica_script","text":"","code":"#none"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_trip_origin_point_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert tabular first link file to gis layer. — make_trip_origin_point_layer","title":"Convert tabular first link file to gis layer. — make_trip_origin_point_layer","text":"network acquired google saved shapefile. function helps converts file CSV GIS layer provides option save GIS object \".gpkg\".","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_trip_origin_point_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert tabular first link file to gis layer. — make_trip_origin_point_layer","text":"","code":"make_trip_origin_point_layer(   location,   folder,   auto_save = F,   first_links_object = NULL )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_trip_origin_point_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert tabular first link file to gis layer. — make_trip_origin_point_layer","text":"location character string pointing top level location data acquired google saved . folder character string name data automatically saved Google data download. auto_save boolean (T/F - default F) indicating want GIS layer saved. Default just creates object without saving. network_object network object containing links. Default NULL input left empty - function use location folder inputs load object convert.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_trip_origin_point_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert tabular first link file to gis layer. — make_trip_origin_point_layer","text":"GIS layer network CRS 4326","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_trip_origin_point_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert tabular first link file to gis layer. — make_trip_origin_point_layer","text":"","code":"data('replica_queried_network_links')  head(replica_queried_network_links) #> Simple feature collection with 6 features and 13 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: -122.3766 ymin: 47.53192 xmax: -122.3003 ymax: 47.68306 #> Geodetic CRS:  WGS 84 #> # A tibble: 6 × 14 #>   stabl…¹ start…² start…³ endLat endLon stree…⁴ dista…⁵  osmid speed flags lanes #>   <chr>     <dbl>   <dbl>  <dbl>  <dbl> <chr>     <int>  <int> <dbl> <chr> <int> #> 1 171637…    47.6   -122.   47.6  -122. I 90     224000 6.21e8  62.1 [ALL…     2 #> 2 237485…    47.5   -122.   47.5  -122. 35th A…  160000 3.32e8  36.2 [ALL…    -1 #> 3 600307…    47.7   -122.   47.7  -122. Montla…   32000 5.01e8  46.6 [ALL…     2 #> 4 104579…    47.7   -122.   47.7  -122. East G…   32000 6.41e6  36.2 [ALL…    -1 #> 5 608423…    47.7   -122.   47.7  -122. Green …   32000 8.03e6  36.2 [ALL…     0 #> 6 499973…    47.7   -122.   47.7  -122. Northe…   32000 4.28e8  36.2 [ALL…    -1 #> # … with 3 more variables: highway <chr>, flag_contains <lgl>, #> #   geom <LINESTRING [°]>, and abbreviated variable names ¹​stableEdgeId, #> #   ²​startLat, ³​startLon, ⁴​streetName, ⁵​distance  make_network_centroid_layer(   location = \"data/req_dev\"   ,folder = \"data_20230106_154119\"   ,network_object = replica_queried_network_links   ,auto_save = F ) #> Centroids were made using supplied spatial links network object... #> Error in sf_object %>% mutate(merge_id = row_number()): could not find function \"%>%\""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/query_network_trip_using_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Easily query and download Replica trip and network data using the extent of a map layer. — query_network_trip_using_bbox","title":"Easily query and download Replica trip and network data using the extent of a map layer. — query_network_trip_using_bbox","text":"function takes bounding box google big query inputs returns data back . Function currently works data using block groups hardcoded queries. Changes can made query polygon shapes can used. function creates log file records inputs, query sent Google, IDs Google table created multi-step query. information can accessed later points time. Table IDs log file can used auditing purposes copy pasted used Google Big Query console GUI.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/query_network_trip_using_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Easily query and download Replica trip and network data using the extent of a map layer. — query_network_trip_using_bbox","text":"","code":"query_network_trip_using_bbox(   bb_network_layer,   bb_sa_layer,   query_links = c(\"highway\", \"corridor\", \"road\", \"motorway\", \"motorway_link\", \"trunk\",     \"trunk_link\", \"primary\", \"primary_link\", \"secondary\", \"secondary_link\", \"tertiary\",     \"tertiary_link\"),   customer_name,   trip_table,   network_table,   file_destination,   query_network = T,   max_record = 1000 )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/query_network_trip_using_bbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Easily query and download Replica trip and network data using the extent of a map layer. — query_network_trip_using_bbox","text":"bb_network_layer bounding box object detailing extent road network used query trips . made using sf::st_bbox(). bb_sa_layer bounding box object detailing extent study area used perform aggregations. made using sf::st_bbox(). input gernerally larger identical [bb_network_layer]. query_links vector character strings detailing type network links use query. used 1) depict network link volume graphics 2) filter trips . latter, trip uses road within study area including reporting. customer_name character string indicating google account billed trip_table character string indicating trip table queired - location, year, quarter, day, etc match network_table. Please include entire table name well '[customer_name].[trip_table]' network_table character string indicating trip table queired - location, year, quarter, day, etc match trip_table. Please include entire table name well '[customer_name].[network_table]' file_destination character string indicating directory want log files data saved . new folder containg function outputs made named using convention 'data_[sys.datetime]' query_network boolean (T/F) indicating network downloaded function runtime. Default 'T'. can beneficial wait see many links downloaded netowrk downloaded, can also downloaded latter log files record big query table IDs. max_record integer indicating max number records written data acquired google - default 1000, use Inf want limit download. Useful want check data first downloading large amounts data. Google tables still made full can manually acquired without rerunning function - see log files.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/query_network_trip_using_bbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Easily query and download Replica trip and network data using the extent of a map layer. — query_network_trip_using_bbox","text":"return objects R. Function creates log file data folder destination CSV format.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/query_network_trip_using_bbox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Easily query and download Replica trip and network data using the extent of a map layer. — query_network_trip_using_bbox","text":"","code":"#none"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/replica_temp_tbl_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract project name, dataset, and tablename from google big query object. — replica_temp_tbl_name","title":"Extract project name, dataset, and tablename from google big query object. — replica_temp_tbl_name","text":"BQuery objects (tables) made using bq_project_query() given temporary dataset table names. function extracts table's identifying elements glues singular string. string can used subsequent queires.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/replica_temp_tbl_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract project name, dataset, and tablename from google big query object. — replica_temp_tbl_name","text":"","code":"replica_temp_tbl_name(object)"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/replica_temp_tbl_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract project name, dataset, and tablename from google big query object. — replica_temp_tbl_name","text":"object","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/replica_temp_tbl_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract project name, dataset, and tablename from google big query object. — replica_temp_tbl_name","text":"character string","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/replica_temp_tbl_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract project name, dataset, and tablename from google big query object. — replica_temp_tbl_name","text":"Function helpful making mulitstepped queries temporary tables created subsequently interacted .","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/replica_temp_tbl_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract project name, dataset, and tablename from google big query object. — replica_temp_tbl_name","text":"","code":"temp = list(username = \"replica_fake_name\" ,dataset = \"replica_temp_dataset\" ,table = \"replica_temp_table\")  replica_temp_tbl_name(temp) #> Error in str_glue(\"{object[[1]]}.{object[[2]]}.{object[[3]]}\"): could not find function \"str_glue\""}]
