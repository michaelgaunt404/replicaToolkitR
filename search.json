[{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/getting_started.html","id":"intro","dir":"Articles","previous_headings":"","what":"Intro","title":"Getting Started","text":"vignette deeper dive README replicaToolkitR. goal document demonstrate acquire, process, analyze data Replica using replicaToolkitR.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/getting_started.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set-Up","title":"Getting Started","text":"packages ’ll need vignette.","code":"library(crosstalk) library(data.table) library(dplyr) library(forcats) library(gauntlet) #https://github.com/michaelgaunt404/gauntlet  library(here) library(leafem) library(leaflet) library(leaflet.extras2) library(log4r) library(magrittr) library(mapview) library(purrr) library(reactable) library(readr) library(sf) library(sfhotspot) library(SpatialKDE) library(stringr) library(tigris) library(tidyr) library(wellknown)"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/getting_started.html","id":"input-data-overview","dir":"Articles","previous_headings":"","what":"Input Data Overview","title":"Getting Started","text":"order use (whether using requesting someone else data), need three pieces data. : polygon used spatially filter network query trips use network inside said area internal--internal: study area study area trips internal--external: study area external trips external--internal: external study area trips external--external: external external trips (trips) polygon used define study area analysis query process, trip’s origin destination polygon classified falling within outside study area falls within study area continue uniquely tracked, - rolled one general study area level dataframe mostly used later raw data processed aggregated, aids focusing analysis limiting size data R objects created","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/getting_started.html","id":"examples","dir":"Articles","previous_headings":"Input Data Overview","what":"Examples","title":"Getting Started","text":"following example polygon used create replicaToolkitR's sample data data document. used filter network well define study area. Note: genearally use polygon defining network study area. Occasionally, make latter larger. Note: polygons can simple complex like. One benefits using package, capable making complicated spatial queries databases using custom geometry, don’t let web GUI. Note: Ideally, want make whatever polygon(s) small possible analysis. : 1) limit much data pulling database network (aka internet bill) 2) limit size data objects saved local computer 3) limit size automated data visualiztions tools created queired data example POI list. need id group attributes, code hard coded look . need groups, please repeat IDs, respectively.","code":"data(\"study_area_network\")  mapview(study_area_network) data(\"poi_list\")  reactable(poi_list)"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/getting_started.html","id":"peforming-the-query","dir":"Articles","previous_headings":"","what":"Peforming the Query","title":"Getting Started","text":"following code main function replicaToolkitR. performs initial function: Supplying spatial polygons define network study area - e.g. bb_network_layer, bb_sa_layer Point Big Query tables want data - e.g. network_table, trip_table want function write data - e.g. file_destination Inf means default can query less might want less just want test function performing EDA query logs intermediate query tables made, can manually download tables later want links want returned Note: usually omit residential links freight analyses care dramtically increase amount data download. application may need . can see example, location networks supplied function want data saved data/req_dev. different need change accordingly. Make sure relative path include ./ function ::() used within query_network_trip_using_bbox() complete path fully machine. addition, certain points querying process function ask input. need supply input times either continue terminate execution querying process.","code":"query_network_trip_using_bbox(   bb_network_layer = 'data/req_dev/study_network.gpkg'   ,bb_sa_layer = 'data/req_dev/study_area_poly.gpkg'   ,network_table = \"replica-customer.northwest.northwest_2019_Q4_network_segments\"   ,trip_table = \"replica-customer.northwest.northwest_2019_Q4_thursday_trip\"   ,customer_name = \"replica-customer\"   ,file_destination = \"data/req_dev\"   ,max_record = Inf   ,query_links = c(\"highway\", \"corridor\", \"road\", \"motorway\", \"motorway_link\", \"trunk\") )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/getting_started.html","id":"raw-queried-data","dir":"Articles","previous_headings":"Peforming the Query","what":"Raw Queried Data","title":"Getting Started","text":"end query, query_network_trip_using_bbox() write 6 files specified file_destination input. specifically, write data sub-folder location named data_[[sys.time run]].","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/getting_started.html","id":"log_file","dir":"Articles","previous_headings":"Peforming the Query > Raw Queried Data","what":"log_file","title":"Getting Started","text":"first file made log_file simple text file logs events run. made regardless run completed, importantly records table IDs temporary tables made Google Big Query table run. can accessed later. also logs inputs can trace inputs given analysis. Log file example","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/getting_started.html","id":"replica_queried_network","dir":"Articles","previous_headings":"Peforming the Query > Raw Queried Data","what":"replica_queried_network","title":"Getting Started","text":"network defined spatial polygon supplied network links requested data . option automatically download . Sometimes beneficial download - e.g. already done still figuring links need full analysis. saved CSV Well-known Text (WKT) attribute spatially defines poly-lines.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/getting_started.html","id":"replica_sa_poly_index","dir":"Articles","previous_headings":"Peforming the Query > Raw Queried Data","what":"replica_sa_poly_index","title":"Getting Started","text":"simple dataframe records IDs polygons fall within study area defined user’s input. , saved CSV Well-known Text (WKT) attribute spatially defines polygons. used later query polygons using TIGRIS API. polygons ones Replica meaningful attributes - e.g. land/water area polygon.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/getting_started.html","id":"replica_trip_origin_destination","dir":"Articles","previous_headings":"Peforming the Query > Raw Queried Data","what":"replica_trip_origin_destination","title":"Getting Started","text":"data frame vehicle trips defined origin, destination, mode vehicle type. tabular data needs combined one spatial polygon layer order map . , origins destinations outside study area collapsed single level called study area.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/getting_started.html","id":"replica_trip_origin_links","dir":"Articles","previous_headings":"Peforming the Query > Raw Queried Data","what":"replica_trip_origin_links","title":"Getting Started","text":"table similar one goes step . details number trips mode, vehicle type, starting trip link. much precise Replica provides aggregate data table . useful number reasons. origins link (link centroid level) thus can aggregated custom geometry want provide - e.g. TAZs (Replica also provides) custom geometry. hard supply Replica custom geometry - data makes don’t use can . Analyses like kernel density estimates (KDEs) hot/cold spot analyses turn much better using precise data rather data aggregated arbitrary polygons like block groups","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/getting_started.html","id":"table_agg_by_link_subset_limited","dir":"Articles","previous_headings":"Peforming the Query > Raw Queried Data","what":"table_agg_by_link_subset_limited","title":"Getting Started","text":"table contains counts per network link given origin polygon, mode, vehicle type. table used create network link volume tables data processing stage work flow. , table saved CSV merged queried network link table (converted spatial format). NOTE: table_agg_by_link_subset_limited likely focus analysis contains network links. replicaToolkitR provides helper functions aggregate network links number pre-set ways may help analysis may want aggregte differently.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/getting_started.html","id":"data-processing","dir":"Articles","previous_headings":"","what":"Data Processing","title":"Getting Started","text":"eluded , function query_network_trip_using_bbox() acquires, performs initial processing , saves Replica data computer. replicaToolkitR provides additional helper functions process data format conducive mapping commonly performed analyses (OD analysis, etc.). functions data processing workflow described section. Note: functions section can supplied object transfrom location folder inputs point data saved. latter supplied function go automatically load whatever file function calls . Suppling object directly compataible targets package workflow. Additionally, function can told automatically save resulting processed data location/folder raw data.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/getting_started.html","id":"acquired_sa_polys","dir":"Articles","previous_headings":"Data Processing","what":"acquired_sa_polys","title":"Getting Started","text":"first function run get_tigris_polys_from_replica_index(). function takes raw data replica_sa_poly_index acquire detailed spatial polygon set study area’s block groups. grabs polygons within study area using TIGRIS API. polygons detailed ones Replica contain attributes land water area can help calculating trip densities origin destination polygons.","code":"data(\"replica_sa_poly_index\")  get_tigris_polys_from_replica_index(   network_object = replica_sa_poly_index   ,states = \"WA\"   ,auto_save = F ) data(\"acquired_sa_polys\")  mapview(acquired_sa_polys)"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/getting_started.html","id":"replica_queried_network_cntds_links","dir":"Articles","previous_headings":"Data Processing","what":"replica_queried_network_cntds/_links","title":"Getting Started","text":"functions make_network_link_layer() make_network_centroid_layer() convert Replica network links tabular data spatial polyline object spatial polyline object spatial points object, respectively. network poly-lines object can merged network volume data create interactive maps. network points object created extracting center-point polyline represents network polyline using center mid-point. done package contains number helper functions help visualize network volumes. functions create interactive, filterable dashboards detailing network volumes compatible spatial points objects spatial poly-lines. Note: make_network_link_layer() must ran make_network_centroid_layer(). sample network link poly-lines network link midpoints. create replica_queried_network_links, can inspect using helper function inspect_queried_network(). often helpful look links acquired Replica labels link highway tag may unfamiliar . Note: standalone HTML widget open RStudio viewer, embedded documnet clarity. Log file example","code":"data(\"replica_queried_network\")  make_network_link_layer(   network_object = replica_queried_network   ,auto_save = F )  data(\"replica_queried_network_links\")  make_network_centroid_layer(   network_object = replica_queried_network_links   ,auto_save = F ) replica_queried_network_links_m = replica_queried_network_links %>%     filter(highway == \"motorway\") replica_queried_network_cntds_m = replica_queried_network_cntds %>%     filter(highway == \"motorway\")  mapview(replica_queried_network_cntds_m) + mapview(replica_queried_network_links_m) inspect_queried_network(   network_links_object = replica_queried_network_links )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/getting_started.html","id":"aggregated_network_links","dir":"Articles","previous_headings":"Data Processing","what":"aggregated_network_links","title":"Getting Started","text":"last main processing function replicaToolkitR aggregate_networkpkgdo_links(). mentioned earlier, function aggregates tabular network link volume data number different ways - trip type, vehicle type, origin trip type. addition, merges network link mid-point object, replica_queried_network_cntds, aggregated data frames make spatial objects depicting network link volumes mid-points. object saved RDS list object, containing aggregated network object list can indexed loaded.","code":"data(\"table_agg_by_link_subset_limited\") data(\"poi_list\") data(\"replica_queried_network_cntds\")  aggregate_network_links(   agg_count_object = table_agg_by_link_subset_limited   ,poi_list = poi_list   ,network_object = replica_queried_network_cntds )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/getting_started.html","id":"analysis-tools","dir":"Articles","previous_headings":"","what":"Analysis Tools","title":"Getting Started","text":"Lastly, stated , intent package streamline Replica workflow, making easy possible ask question, get data, begin extract meaningful insights. replicaToolkitR provides additional helper functions automatically create interactive, filterable dashboard-like objects data. helper tools visualization products make easy slice inspect data without going though repetitive steps coding putting programs. specific helper functions visualize network volume aggregation object. static image interactive dashboard. Log file example","code":"data(\"aggregated_network_links\") data(\"poi_list\") data(\"acquired_sa_polys\")  make_network_map_anltpt(   network_cntrd_object = aggregated_network_links   ,poi_list = poi_list   ,origin_polys = acquired_sa_polys )  make_network_map_anlt(   network_cntrd_object = aggregated_network_links   ,poi_list = poi_list   ,origin_polys = acquired_sa_polys )  make_network_map_anlto(   network_cntrd_object = aggregated_network_links   ,poi_list = poi_list   ,origin_polys = acquired_sa_polys )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/replica_hotspot.html","id":"intro","dir":"Articles","previous_headings":"","what":"Intro","title":"KDE and Hotspot Workflow","text":"vignette shows run Kernel Density Estimate (KDE) Hotspot analysis using data retrieved using replicaToolkitR package. goal document present complete analysis showcase easily implement analyses using data products created replicaToolkitR Replica. NOTE: vignette uses data comes replicaToolkitR, user precursory understanding acquire data using replicaToolkitR::query_network_trip_using_bbox().","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/replica_hotspot.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set-Up","title":"KDE and Hotspot Workflow","text":"packages ’ll need vignette.","code":"library(here) # library(tidyverse) library(dplyr) library(stringr) library(magrittr) library(purrr)  library(leaflet) library(leaflet.extras2) library(mapview) library(sf)  library(SpatialKDE) library(sfhotspot)  library(replicaToolkitR) library(gauntlet) #https://github.com/michaelgaunt404/gauntlet"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/replica_hotspot.html","id":"data-overview","dir":"Articles","previous_headings":"","what":"Data Overview","title":"KDE and Hotspot Workflow","text":"data used analysis acquired using study area bounding box seen . Note: trip travelling though zone queried via replicaToolkitR. done account vehicles traveling study area network links. full list trips queried listed : internal--internal: study area study area trips internal--external: study area external trips external--internal: external study area trips external--external: external external trips (trips) replicaToolkitR, however; filters trips originate within study area polygon displaying aggregating anything regarding trip origins. map details trip origins counts aggregated trips first network link. Links case displayed points determined starting coordinates. Normally, data loaded replica_trip_origin_links.gpkg file user creates querying Google instance loaded package.","code":"data(\"replica_trip_origin_links_gpkg\")  replica_trip_origin_links_fltrd = replica_trip_origin_links_gpkg %>%     st_filter(study_area_network) %>%     st_transform(crs = 32610)"},{"path":[]},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/replica_hotspot.html","id":"data-prep","dir":"Articles","previous_headings":"KDE and Hotspot","what":"Data Prep","title":"KDE and Hotspot Workflow","text":"SpatialKDE sfhotspot packages used perform KDE analysis. latter built upon former provides convenience wrappers don’t want get get nitty-gritty function options. used vignette. First, create grid covers spread data. case, cell size 200 meters chosen roughly size city blocks Seattle good unit analysis. water around city removed using tigris package. important step, make distinction location generate trips one incapable generating trips - .e. freight trips start middle Lake Washington. grids displayed map. grid removed water features seen right panel: can see perfect; Green Lake, Union Bay water features removed. addition, idea can extended locations incapable generating trips parks, universities, airport tarmac, etc. R package mapedit provides functions allow user easily draw create polygons can used remove non-trip generating similar water removal . vignette cover .","code":"grid_sm = create_grid_hexagonal(   replica_trip_origin_links_fltrd   ,cell_size = 200) grid_sm_water_removed = tigris::erase_water(grid_sm) %>%   st_cast(\"POLYGON\")"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/replica_hotspot.html","id":"analysis-execution","dir":"Articles","previous_headings":"KDE and Hotspot","what":"Analysis Execution","title":"KDE and Hotspot Workflow","text":"code runs **hotspot_kde()** function different vehicle types data using different grids previously created. **purrr::pmap()** function allows us iterate multiple arguments simultaneously resulting list object (saves us bunch key strokes!). resulting 2D kernel density estimates trip origins heavy (left panel) medium (right panel) duty vehicles displayed : results pretty interesting - rather dramatic difference heavy medium duty trucks go Seattle. Heavy duty trucks stick ports, medium duty tricks distributed Seattle (’re smaller can get around easier, makes sense!). analysis can extended using hotspot_gistar() function, allows us easily calculate gi-star Z-score statistic used identifying clusters point locations. theory behind statistic covered reviewed implementing . map depicts result calculating gi-star Z-score statistic. Statistically significant hot cold locations displayed: just using default input options, get pretty interesting findings. see rather large cold spots Green Lake, Union Bay, Discovery Park (west Magnolia) - makes sense first two locations bodies water third large wooded park freight trucks don’t go. comparison neighbors, locations especially cold regions trucks identified. One take findings remove areas subsequent analysis iterations.","code":"hotspot_obeject = list(   list(\"MEDIUM_COMMERCIAL\", \"MEDIUM_COMMERCIAL\", \"HEAVY_COMMERCIAL\", \"HEAVY_COMMERCIAL\")   ,list(grid_sm_water_removed, grid_sm, grid_sm_water_removed, grid_sm) ) %>%   pmap(~{     temp_hotspot = replica_trip_origin_links_fltrd %>%       filter(vehicle_type == .x) %>%       hotspot_kde(         data = .         ,grid = .y         ,weights = count         ,bandwidth = 800) %>%       mutate(kde_norm = gauntlet::normalize_min_max(kde)) %>%       mutate(label = str_glue(\"KDE (Min-Max Norm): {dgt2(kde_norm)}<br>KDE (raw): {dgt2(kde)}<br>TTL Trips: {sum}\")) %>%       st_transform(crs = 4326)   }) temp_hotspot = replica_trip_origin_links_fltrd %>%       filter(vehicle_type == \"MEDIUM_COMMERCIAL\") %>%       hotspot_gistar(         data = .         ,grid = grid_sm_water_removed         ,weights = count         ,bandwidth = 800) temp_hotspot %>%   filter(pvalue <= .01) %>%   mutate(flag_gistar = case_when(gistar > 0~\"Hot\", T~\"Cold\")) %>%   mapview(layer.name = \"Hotspots\", zcol = \"flag_gistar\")"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/articles/replica_hotspot.html","id":"considerations","dir":"Articles","previous_headings":"","what":"Considerations","title":"KDE and Hotspot Workflow","text":"simple vignette intended highlight specific workflow stemming data acquired replicaToolkitR package. detailed analysis, one consider: help prevent identifying spurious hot/cold locations proper unit measure grid bandwidth used KDE gistar calculations default quadratic kernel used others can specified impacts whether cell statistically varies neighbors altering impact size shape hot cold spots ***","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mike Gaunt. Author, maintainer.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gaunt M (2023). replicaToolkitR: Easily query process data Replica Mobility Platform. R package version 0.1.0, https://github.com/michaelgaunt404/replicaToolkitR.","code":"@Manual{,   title = {replicaToolkitR: Easily query and process data from Replica Mobility Platform},   author = {Mike Gaunt},   year = {2023},   note = {R package version 0.1.0},   url = {https://github.com/michaelgaunt404/replicaToolkitR}, }"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/index.html","id":"replicatoolkitr","dir":"","previous_headings":"","what":"Easily query and process data from Replica Mobility Platform","title":"Easily query and process data from Replica Mobility Platform","text":"R package provides set functions allow user query process Replica data. Using user inputs, SQL queries area made Replica Big Query database. results queries returned user form CSVs. Convenience functions used convert tabular data spatial SF objects.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/index.html","id":"intent-of-this-package","dir":"","previous_headings":"","what":"Intent of this package:","title":"Easily query and process data from Replica Mobility Platform","text":"package intended lower overhead working Replica data. Specifically, make extremely easy little cost acquire Replica data produce basic analytic tools (dashboards) quickly gain useful insights.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/index.html","id":"what-you-can-do-with-this-package","dir":"","previous_headings":"","what":"What you can do with this package:","title":"Easily query and process data from Replica Mobility Platform","text":"✔️ Make queries directly acquire data Replica’s Big Query database using inputs custom geometry✔️ Create data sets queries use : Quantify trip ODs Aggregate network link volumes Produce trip origin kernel density estimates (KDE) Identify trip origin hotspots coldspots ✔️ Create interactive, filterable map widgets help inspect data NOTE: usage package requires user account Replica access Google BigQuery via Replica.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easily query and process data from Replica Mobility Platform","text":"Install development version GitHub:","code":"# install.packages(\"devtools\") devtools::install_github(\"michaelgaunt404/replicaToolkitR\")"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Easily query and process data from Replica Mobility Platform","text":"Load package. run function query_network_trip_using_bbox() query replica database given supplied inputs. function run , times, ask inputs either continue terminate run.","code":"library(replicaToolkitR) query_network_trip_using_bbox(   bb_network_layer = 'data/req_dev/study_area_network.shp'   ,bb_sa_layer = 'data/req_dev/study_area_network.shp'   ,network_table = \"replica-customer.northwest.northwest_2021_Q4_network_segments\"   ,trip_table = \"replica-customer.northwest.northwest_2021_Q4_thursday_trip\"   ,customer_name = \"replica-customer\"   ,file_destination = \"data/req_dev\"   ,max_record = Inf   ,query_links = c(\"highway\", \"corridor\", \"road\", \"motorway\", \"motorway_link\", \"trunk\",                    \"trunk_link\", \"primary\", \"primary_link\", \"secondary\", \"secondary_link\") )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/index.html","id":"output","dir":"","previous_headings":"","what":"Output","title":"Easily query and process data from Replica Mobility Platform","text":"completed, queried data written location defined input file_destination. 6 files written, : log_file: Simple text file logging events run. Records table IDs temporary tables made Google Big Query table run. can accessed later. replica_queried_network: network queried user. user asked want download file - can rather large given query inputs. replica_sa_poly_index: table containing polygons found within user supplied bb_sa_layer polygon. replica_trip_origin_destination: table containing counts vehicles aggregated origin polygon, destination polygon, vehicle type. Origins destinations outside study area collapsed single level called study area. replica_trip_origin_links: table containing counts vehicle given origin polygon starting network link. data set provides precise view vehicle starting locations rather origin polygon (usually census block groups). useful performing hotspot analyses calculating kernel density estimates (KDEs). table_agg_by_link_subset_limited: table detailing network link volumes given day aggregated origin polygon network link data listed save CSVs. Helper functions provided convert tabular data spatial data save GPKG RDS files. Resulting files folder data acquisition.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/index.html","id":"data-processing","dir":"","previous_headings":"","what":"Data Processing","title":"Easily query and process data from Replica Mobility Platform","text":"indicated , replicaToolkitR provides helper functions convert tabular data acquired query_network_trip_using_bbox() spatial format conducive mapping. NOTE: functions section can supplied object transfrom location/folder inputs point data saved. latter supplied function go automatically load whatever file function calls . Suppling object directly compataible targets package workflow. Acquire origin polygons tigris census API package using replica_sa_poly_index. Make SF line-string spatial object network links. Make SF point spatial object extracting center points network links. SF point spatial object trip first link aggregation table. Make RDS list object containing network volume aggregation tables. image shows saved files designated folder processing.  NOTE: functions always return object. choose auto_save still returned result. advised auto_save object point naming conventions respected.","code":"data(\"replica_sa_poly_index\")  get_tigris_polys_from_replica_index(   network_object = replica_sa_poly_index   ,states = \"WA\"   ,auto_save = F ) data(\"replica_queried_network\")  make_network_link_layer(   network_object = replica_queried_network   ,auto_save = F ) data(\"replica_queried_network\")  make_network_centroid_layer(   network_object = replica_queried_network_links   ,auto_save = F ) data(\"replica_trip_origin_links\")  make_trip_origin_point_layer(   first_links_object = replica_trip_origin_links   ,auto_save = F ) data(\"table_agg_by_link_subset_limited\") data(\"poi_list\") data(\"replica_queried_network_cntds\")  aggregate_network_links(   agg_count_object = table_agg_by_link_subset_limited   ,poi_list = poi_list   ,network_object = replica_queried_network_cntds )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/index.html","id":"analysis-tools","dir":"","previous_headings":"","what":"Analysis Tools","title":"Easily query and process data from Replica Mobility Platform","text":"package contains number functions create interactive, filterable leaflet widgets can aid analysis research. Make interactive filterable map widget acquired network links, see example code:  Make interactive filterable map widgets network links pre-aggregated number ways, see example code: make_network_map_anltpt() - Aggregated Network Links vehicle TriP Type make_network_map_anlt() - Aggregated Network Links vehicle Type make_network_map_anlt0() - Aggregated Network Links vehicle Type Origin","code":"data(\"replica_queried_network_links\")  inspect_queried_network(   network_links_object = replica_queried_network_links ) data(\"aggregated_network_links\") data(\"poi_list\") data(\"acquired_sa_polys\")  make_network_map_anltpt(   network_cntrd_object = aggregated_network_links   ,poi_list = poi_list   ,origin_polys = acquired_sa_polys )  make_network_map_anlt(   network_cntrd_object = aggregated_network_links   ,poi_list = poi_list   ,origin_polys = acquired_sa_polys )  make_network_map_anlto(   network_cntrd_object = aggregated_network_links   ,poi_list = poi_list   ,origin_polys = acquired_sa_polys )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/index.html","id":"what-now","dir":"","previous_headings":"","what":"What Now?","title":"Easily query and process data from Replica Mobility Platform","text":"Lastly, package contains functions save basic analysis functions. Run code create analysis template.","code":"replicaToolkitR::make_query_and_process_replica_script()"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/aggregate_network_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Quickly make network link aggregate objects. — aggregate_network_links","title":"Quickly make network link aggregate objects. — aggregate_network_links","text":"function makes RDS list object containing network link layers aggreated three different pre-set ways. data contained `table_agg_by_link_subset_limited` aggregated : + network_link flag_sa_destination + network_link_ids_unnested vehicle_type + network_link_ids_unnested, origin_poly, vehicle_type","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/aggregate_network_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quickly make network link aggregate objects. — aggregate_network_links","text":"","code":"aggregate_network_links(   location,   folder,   auto_save = F,   agg_count_object = NULL,   network_object = NULL )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/aggregate_network_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quickly make network link aggregate objects. — aggregate_network_links","text":"location character string pointing top level location data acquired google saved . folder character string name data automatically saved google data download. auto_save Boolean (T/F - default F) indicating want GIS layer saved. Default just creates object without saving. agg_count_object data frame object containing raw link volumes. network_object spatial object either network represented poly-lines network link mid-points.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/aggregate_network_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quickly make network link aggregate objects. — aggregate_network_links","text":"data frame /saved RDS file","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/aggregate_network_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quickly make network link aggregate objects. — aggregate_network_links","text":"","code":"data(\"table_agg_by_link_subset_limited\") data(\"replica_queried_network_cntds\")  aggregate_network_links(   agg_count_object = table_agg_by_link_subset_limited   ,network_object = replica_queried_network_cntds ) #> Aggregations will be made using supplied network object... #> Error in agg_count_object %>% mutate(flag_trip_type = str_glue(\"{flag_sa_origin}-{flag_sa_destination}\"),     network_link_ids_unnested = str_trunc(network_link_ids_unnested,         14, \"right\", \"\")): could not find function \"%>%\""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/check_links_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatically check which Replica links have volumes associated with them. — check_links_download","title":"Automatically check which Replica links have volumes associated with them. — check_links_download","text":"function compares network links found raw network link volume table acquired Repllica network. function ran automatically end query function can ran manually well.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/check_links_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatically check which Replica links have volumes associated with them. — check_links_download","text":"","code":"check_links_download(location, folder)"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/check_links_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatically check which Replica links have volumes associated with them. — check_links_download","text":"location character string pointing top level location data acquired Google saved . folder character string name data automatically saved google data download.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/check_links_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatically check which Replica links have volumes associated with them. — check_links_download","text":"returned object detailing network links acquired volumes associated .","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/check_links_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automatically check which Replica links have volumes associated with them. — check_links_download","text":"","code":"#none"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/get_tigris_polys_from_replica_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Get polygons using Replica study area poly index. — get_tigris_polys_from_replica_index","title":"Get polygons using Replica study area poly index. — get_tigris_polys_from_replica_index","text":"Get polygons using Replica study area poly index.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/get_tigris_polys_from_replica_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get polygons using Replica study area poly index. — get_tigris_polys_from_replica_index","text":"","code":"get_tigris_polys_from_replica_index(   location,   folder,   auto_save = F,   network_object = NULL,   states,   year = 2010 )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/get_tigris_polys_from_replica_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get polygons using Replica study area poly index. — get_tigris_polys_from_replica_index","text":"location character string pointing top level location data acquired google saved . folder character string name data automatically saved google data download. auto_save boolean (T/F - default F) indicating want GIS layer saved. Default just creates object without saving. network_object network object containing links. Default NULL input left empty - function use location folder inputs load object convert. states character string vector character string state two letter abbreviations indicating states get polys . year integer indicating year census polys acquired. Replica uses 2010 functions default 2010, change .","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/get_tigris_polys_from_replica_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get polygons using Replica study area poly index. — get_tigris_polys_from_replica_index","text":"spatial object containing polygons study area polygons acquired Replica.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/get_tigris_polys_from_replica_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get polygons using Replica study area poly index. — get_tigris_polys_from_replica_index","text":"","code":"#none"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/inspect_queried_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Quickly map and inspect queried network links — inspect_queried_network","title":"Quickly map and inspect queried network links — inspect_queried_network","text":"convenience function maps network queried given user inputs. Replica uses uncommon naming conventions links link types. can beneficial inspect links queried ensure including links car analyis. function creates **crosstalk object** - client-side, interactive, filterable HTML widget. effectively bite-size dashboard helps better understand network. can filter links link type street name. > **_NOTE:_** Network links mapped link _centroids_ - due quirk given packages needed create feature.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/inspect_queried_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quickly map and inspect queried network links — inspect_queried_network","text":"","code":"inspect_queried_network(location, folder, network_links_object = NULL)"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/inspect_queried_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quickly map and inspect queried network links — inspect_queried_network","text":"location character string pointing top level location data acquired google saved . folder character string name data automatically saved google data download. network_links_object network object containing links. Default NULL input left empty - function use location folder inputs load object convert.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/inspect_queried_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quickly map and inspect queried network links — inspect_queried_network","text":"HTML widget map acquired network links","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/inspect_queried_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quickly map and inspect queried network links — inspect_queried_network","text":"","code":"data(\"replica_queried_network_links\")  inspect_queried_network(   network_links_object = replica_queried_network_links ) #> Error in paste0(rep(with, n), collapse = c) %>% paste0(\"\\n\", .): could not find function \"%>%\""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_agg_network_shapefile_centroids.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert tabular network link count objects to SF point objects. — make_agg_network_shapefile_centroids","title":"Convert tabular network link count objects to SF point objects. — make_agg_network_shapefile_centroids","text":"functions takes three tabular network link counts data frames converts individual SF objects contained within list. can supplied either list object directly supplied location folder strings point folder list . Note: used intend visualize objects crosstalk.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_agg_network_shapefile_centroids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert tabular network link count objects to SF point objects. — make_agg_network_shapefile_centroids","text":"","code":"make_agg_network_shapefile_centroids(   location,   folder,   auto_save = F,   aggregate_object = NULL,   network_centroid_object = NULL )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_agg_network_shapefile_centroids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert tabular network link count objects to SF point objects. — make_agg_network_shapefile_centroids","text":"location character string pointing top level location data acquired google saved . folder character string name data automatically saved google data download. auto_save boolean (T/F - default F) indicating want GIS layer saved. Default just creates object without saving. aggregate_object list object containing network link counts aggregated different levels. network_centroid_object network object containing links. Default NULL input left empty - function use location folder inputs load object convert.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_agg_network_shapefile_centroids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert tabular network link count objects to SF point objects. — make_agg_network_shapefile_centroids","text":"data frame /saved RDS file","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_agg_network_shapefile_centroids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert tabular network link count objects to SF point objects. — make_agg_network_shapefile_centroids","text":"","code":"data('aggregated_network_links') data('replica_queried_network_cntds')  make_agg_network_shapefile_centroids(   aggregate_object = aggregated_network_links   ,network_centroid_object = replica_queried_network_links   ,auto_save = F ) #> Aggregate network links objects will be made using supplied aggregate table... #> Shapefile will be made using supplied network link object... #> Error in str_glue(\"Making shapefiles by merging data centroids with aggregated count data{make_space('-')}\"): could not find function \"str_glue\""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_agg_network_shapefile_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert tabular network link count objects to SF polyline objects. — make_agg_network_shapefile_links","title":"Convert tabular network link count objects to SF polyline objects. — make_agg_network_shapefile_links","text":"functions takes three tabular network link counts data frames converts individual SF objects contained within list. can supplied either list object directly supplied location folder strings point folder list .","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_agg_network_shapefile_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert tabular network link count objects to SF polyline objects. — make_agg_network_shapefile_links","text":"","code":"make_agg_network_shapefile_links(   location,   folder,   auto_save = F,   aggregate_object = NULL,   network_link_object = NULL )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_agg_network_shapefile_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert tabular network link count objects to SF polyline objects. — make_agg_network_shapefile_links","text":"location character string pointing top level location data acquired google saved . folder character string name data automatically saved google data download. auto_save boolean (T/F - default F) indicating want GIS layer saved. Default just creates object without saving. aggregate_object list object containing network link counts aggregated different levels. network_link_object network object containing links. Default NULL input left empty - function use location folder inputs load object convert.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_agg_network_shapefile_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert tabular network link count objects to SF polyline objects. — make_agg_network_shapefile_links","text":"data frame /saved RDS file","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_agg_network_shapefile_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert tabular network link count objects to SF polyline objects. — make_agg_network_shapefile_links","text":"","code":"data('aggregated_network_links') data('replica_queried_network_links')  make_agg_network_shapefile_links(   aggregate_object = aggregated_network_links   ,network_link_object = replica_queried_network_links   ,auto_save = F ) #> Aggregate network links objects will be made using supplied aggregate table... #> network_link_object will be made using supplied network link object... #> Error in str_glue(\"Making shapefiles by merging data centroids with aggregated count data{make_space('-')}\"): could not find function \"str_glue\""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_centroid_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert GIS network links to points by using link centroids. — make_network_centroid_layer","title":"Convert GIS network links to points by using link centroids. — make_network_centroid_layer","text":"HTML packages used creating interactive, client-side visualizations compatible links. function converts GIS links points extracting centroids.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_centroid_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert GIS network links to points by using link centroids. — make_network_centroid_layer","text":"","code":"make_network_centroid_layer(   location,   folder,   auto_save = F,   network_object = NULL )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_centroid_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert GIS network links to points by using link centroids. — make_network_centroid_layer","text":"location character string pointing top level location data acquired google saved . folder character string name data automatically saved Google data download. auto_save boolean (T/F - default F) indicating want GIS layer saved. Default just creates object without saving. network_object network object containing links. Default NULL input left empty - function use location folder inputs load object convert.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_centroid_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert GIS network links to points by using link centroids. — make_network_centroid_layer","text":"GIS layer network CRS 4326","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_centroid_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert GIS network links to points by using link centroids. — make_network_centroid_layer","text":"","code":"data('replica_queried_network_links')  head(replica_queried_network_links) #> Error in FUN(X[[i]], ...): `x` must be a vector, not a <sfc_LINESTRING/sfc> object.  make_network_centroid_layer(   location = \"data/req_dev\"   ,folder = \"data_20230106_154119\"   ,network_object = replica_queried_network_links   ,auto_save = F ) #> Centroids were made using supplied spatial links network object... #> Error in gauntlet::st_true_midpoint(network_object) %>% select(!c(merge_id)): could not find function \"%>%\""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_link_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert tabular network file to gis layer. — make_network_link_layer","title":"Convert tabular network file to gis layer. — make_network_link_layer","text":"network acquired google saved shapefile. function helps converts file CSV GIS layer provides option save GIS object \".gpkg\".","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_link_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert tabular network file to gis layer. — make_network_link_layer","text":"","code":"make_network_link_layer(location, folder, auto_save = F, network_object = NULL)"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_link_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert tabular network file to gis layer. — make_network_link_layer","text":"location character string pointing top level location data acquired Google saved . folder character string name data automatically saved google data download. auto_save Boolean (T/F - default F) indicating want GIS layer saved. Default just creates object without saving. network_object tabular link data. Default NULL input left empty - function use location folder inputs load object convert.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_link_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert tabular network file to gis layer. — make_network_link_layer","text":"GIS layer network CRS 4326","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_link_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert tabular network file to gis layer. — make_network_link_layer","text":"","code":"data('replica_queried_network')  head(replica_queried_network) #>           stableEdgeId startLat  startLon   endLat    endLon #> 1  3314086443153252989 47.57149 -122.3263 47.57128 -122.3218 #> 2 13364080376100105306 47.71454 -122.3264 47.71860 -122.3243 #> 3 11220870802337992971 47.67396 -122.3211 47.66535 -122.3220 #> 4  2710054550801689901 47.65245 -122.3473 47.65227 -122.3473 #> 5 10283859269900203165 47.56954 -122.3198 47.57020 -122.3199 #> 6  6870997489565112252 47.61626 -122.3286 47.61645 -122.3283 #>            streetName distance     osmid    speed               flags lanes #> 1 West Seattle Bridge   341000  32289049 51.74856        [ALLOWS_CAR]     2 #> 2                 I 5   479000 306194398 88.02476        [ALLOWS_CAR]     6 #> 3         I 5 Express   959000 331932767 88.02476        [ALLOWS_CAR]    -1 #> 4 Aurora Avenue North    20000 457542648 62.11319 [ALLOWS_PEDESTRIAN]     0 #> 5                <NA>    73000  32222767 72.47782        [ALLOWS_CAR]     2 #> 6                <NA>    30000 436165683 72.47782        [ALLOWS_CAR]     1 #>         highway #> 1      motorway #> 2      motorway #> 3      motorway #> 4         trunk #> 5 motorway_link #> 6 motorway_link #>                                                                                                                                                                                                                  geometry #> 1                                                                      LINESTRING(-122.326328 47.571485, -122.326062 47.571474, -122.324805 47.57126, -122.324484 47.57124, -122.324161 47.571232, -122.321796 47.571279) #> 2 LINESTRING(-122.326383 47.714536, -122.32561 47.715517, -122.325202 47.716067, -122.324979 47.716434, -122.324666 47.71707, -122.324502 47.717483, -122.324367 47.717924, -122.324282 47.718343, -122.324258 47.718603) #> 3                                                                     LINESTRING(-122.321138 47.673956, -122.321675 47.672022, -122.321843 47.671213, -122.321914 47.67068, -122.321973 47.669872, -122.322007 47.665353) #> 4                                                                                                                                                                LINESTRING(-122.347252 47.652447, -122.347254 47.652271) #> 5                                                                                                                     LINESTRING(-122.319812 47.569542, -122.319788 47.569727, -122.319793 47.569911, -122.31987 47.5702) #> 6                                                                                                                                         LINESTRING(-122.328613 47.616257, -122.328483 47.616361, -122.328335 47.616447) #>   flag_contains #> 1          TRUE #> 2          TRUE #> 3          TRUE #> 4          TRUE #> 5          TRUE #> 6          TRUE  make_network_link_layer(   network_object = replica_queried_network   ,auto_save = F ) #> Spatial links were made using supplied tabular network object... #> Error in st_geometry_type(replica_queried_network): could not find function \"st_geometry_type\""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive HTML widget displaying network link volumes - ANL (Agg. Network Links) — make_network_map_anl","title":"Create interactive HTML widget displaying network link volumes - ANL (Agg. Network Links) — make_network_map_anl","text":"function creates interactive HTML widget displays network volumes aggregated vehicle type. HTML contains filtering mapping features can used investigate data.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive HTML widget displaying network link volumes - ANL (Agg. Network Links) — make_network_map_anl","text":"","code":"make_network_map_anl(   network_cntrd_object,   poi_list = NULL,   origin_polys = NULL )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive HTML widget displaying network link volumes - ANL (Agg. Network Links) — make_network_map_anl","text":"network_cntrd_object list object containing aggregated link centroid networks. poi_list data frame object detailing id group attributes polygons network links displayed . polygons considered Points--Interests within study area polygon. origin_polys processed acquired_sa_polys object created study.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive HTML widget displaying network link volumes - ANL (Agg. Network Links) — make_network_map_anl","text":"HTML widget map network volumes","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive HTML widget displaying network link volumes - ANL (Agg. Network Links) — make_network_map_anl","text":"","code":"data(\"acquired_sa_polys\") data(\"poi_list\") data(\"network_centroid_aggregation_list\")  make_network_map_anlt(   network_cntrd_object = network_centroid_aggregation_list   ,poi_list = poi_list   ,origin_polys = acquired_sa_polys ) #> Error in origin_polys %>% merge(poi_list %>% mutate(id = as.character(id)),     by.x = \"GEOID10\", by.y = \"id\", all = T): could not find function \"%>%\""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anlt.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive HTML widget displaying network link volumes - ANLT (Agg. Network Links by veh. Type) — make_network_map_anlt","title":"Create interactive HTML widget displaying network link volumes - ANLT (Agg. Network Links by veh. Type) — make_network_map_anlt","text":"function creates interactive HTML widget displays network volumes aggregated vehicle type. HTML contains filtering mapping features can used investigate data.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anlt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive HTML widget displaying network link volumes - ANLT (Agg. Network Links by veh. Type) — make_network_map_anlt","text":"","code":"make_network_map_anlt(   network_cntrd_object,   poi_list = NULL,   origin_polys = NULL )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anlt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive HTML widget displaying network link volumes - ANLT (Agg. Network Links by veh. Type) — make_network_map_anlt","text":"network_cntrd_object list object containing aggregated link centroid networks. poi_list data frame object detailing id group attributes polygons network links displayed . polygons considered Points--Interests within study area polygon. origin_polys processed acquired_sa_polys object created study.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anlt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive HTML widget displaying network link volumes - ANLT (Agg. Network Links by veh. Type) — make_network_map_anlt","text":"HTML widget map network volumes","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anlt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive HTML widget displaying network link volumes - ANLT (Agg. Network Links by veh. Type) — make_network_map_anlt","text":"","code":"data(\"acquired_sa_polys\") data(\"poi_list\") data(\"network_centroid_aggregation_list\")  make_network_map_anlt(   network_cntrd_object = network_centroid_aggregation_list   ,poi_list = poi_list   ,origin_polys = acquired_sa_polys ) #> Error in origin_polys %>% merge(poi_list %>% mutate(id = as.character(id)),     by.x = \"GEOID10\", by.y = \"id\", all = T): could not find function \"%>%\""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anlto.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive HTML widget of network links (volumes agg. by origin and veh. type). — make_network_map_anlto","title":"Create interactive HTML widget of network links (volumes agg. by origin and veh. type). — make_network_map_anlto","text":"function creates interactive HTML widget displays network volumes aggregated trips' origin poly vehicle type. HTML contains filtering mapping features can used investigate data.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anlto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive HTML widget of network links (volumes agg. by origin and veh. type). — make_network_map_anlto","text":"","code":"make_network_map_anlto(   network_cntrd_object,   poi_list = NULL,   origin_polys = NULL )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anlto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive HTML widget of network links (volumes agg. by origin and veh. type). — make_network_map_anlto","text":"network_cntrd_object list object containing aggregated link centroid networks. poi_list data frame object detailing id group attributes polygons network links displayed . polygons considered Points--Interests within study area polygon. origin_polys processed acquired_sa_polys object created study.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anlto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive HTML widget of network links (volumes agg. by origin and veh. type). — make_network_map_anlto","text":"HTML widget map network volumes","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anlto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive HTML widget of network links (volumes agg. by origin and veh. type). — make_network_map_anlto","text":"","code":"data(\"acquired_sa_polys\") data(\"poi_list\") data(\"network_centroid_aggregation_list\")  make_network_map_anlto(   network_cntrd_object = network_centroid_aggregation_list   ,poi_list = poi_list   ,origin_polys = acquired_sa_polys ) #> Error in origin_polys %>% merge(poi_list %>% mutate(id = as.character(id)),     by.x = \"GEOID10\", by.y = \"id\", all = T): could not find function \"%>%\""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anltpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Create interactive HTML widget displaying network link volumes - ANLT (Agg. Network Links by veh. Type) — make_network_map_anltpt","title":"Create interactive HTML widget displaying network link volumes - ANLT (Agg. Network Links by veh. Type) — make_network_map_anltpt","text":"function creates interactive HTML widget displays network volumes aggregated vehicle type. HTML contains filtering mapping features can used investigate data.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anltpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create interactive HTML widget displaying network link volumes - ANLT (Agg. Network Links by veh. Type) — make_network_map_anltpt","text":"","code":"make_network_map_anltpt(   network_cntrd_object,   poi_list = NULL,   origin_polys = NULL )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anltpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create interactive HTML widget displaying network link volumes - ANLT (Agg. Network Links by veh. Type) — make_network_map_anltpt","text":"network_cntrd_object list object containing aggregated link centroid networks. poi_list data frame object detailing id group attributes polygons network links displayed . polygons considered Points--Interests within study area polygon. origin_polys processed acquired_sa_polys object created study.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anltpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create interactive HTML widget displaying network link volumes - ANLT (Agg. Network Links by veh. Type) — make_network_map_anltpt","text":"HTML widget map network volumes","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_network_map_anltpt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create interactive HTML widget displaying network link volumes - ANLT (Agg. Network Links by veh. Type) — make_network_map_anltpt","text":"","code":"data(\"acquired_sa_polys\") data(\"poi_list\") data(\"network_centroid_aggregation_list\")  make_network_map_anlt(   network_cntrd_object = network_centroid_aggregation_list   ,poi_list = poi_list   ,origin_polys = acquired_sa_polys ) #> Error in origin_polys %>% merge(poi_list %>% mutate(id = as.character(id)),     by.x = \"GEOID10\", by.y = \"id\", all = T): could not find function \"%>%\""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_query_and_process_replica_script.html","id":null,"dir":"Reference","previous_headings":"","what":"Make new **Query and Process Replica** script from template. — make_query_and_process_replica_script","title":"Make new **Query and Process Replica** script from template. — make_query_and_process_replica_script","text":"function copies R script template package saves usesr specified location. template basic workflow acquiring processing replica data.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_query_and_process_replica_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make new **Query and Process Replica** script from template. — make_query_and_process_replica_script","text":"","code":"make_query_and_process_replica_script(folder = \"code\", file_name = NULL)"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_query_and_process_replica_script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make new **Query and Process Replica** script from template. — make_query_and_process_replica_script","text":"folder string indicating file saved. file_name string name (include .r extension)","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_query_and_process_replica_script.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make new **Query and Process Replica** script from template. — make_query_and_process_replica_script","text":"script location name choosen user","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_query_and_process_replica_script.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make new **Query and Process Replica** script from template. — make_query_and_process_replica_script","text":"","code":"#none"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_trip_origin_point_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert tabular first link file to gis layer. — make_trip_origin_point_layer","title":"Convert tabular first link file to gis layer. — make_trip_origin_point_layer","text":"network acquired google saved shapefile. function helps converts file CSV GIS layer provides option save GIS object \".gpkg\".","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_trip_origin_point_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert tabular first link file to gis layer. — make_trip_origin_point_layer","text":"","code":"make_trip_origin_point_layer(   location,   folder,   auto_save = F,   first_links_object = NULL )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_trip_origin_point_layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert tabular first link file to gis layer. — make_trip_origin_point_layer","text":"location character string pointing top level location data acquired google saved . folder character string name data automatically saved Google data download. auto_save boolean (T/F - default F) indicating want GIS layer saved. Default just creates object without saving. first_links_object network object containing links. Default NULL input left empty - function use location folder inputs load object convert.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_trip_origin_point_layer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert tabular first link file to gis layer. — make_trip_origin_point_layer","text":"GIS layer network CRS 4326","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/make_trip_origin_point_layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert tabular first link file to gis layer. — make_trip_origin_point_layer","text":"","code":"data('replica_queried_network_links')  head(replica_queried_network_links) #> Simple feature collection with 6 features and 7 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: -122.3473 ymin: 47.56954 xmax: -122.3198 ymax: 47.7186 #> Geodetic CRS:  WGS 84 #> # A tibble: 6 × 8 #>   stableEdgeId   streetName          distance     osmid highway  flag_…¹ flag_…² #>   <chr>          <chr>                  <int>     <int> <chr>    <lgl>   <chr>   #> 1 33140864431532 West Seattle Bridge   341000  32289049 motorway TRUE    Not a … #> 2 13364080376100 I 5                   479000 306194398 motorway TRUE    Flagge… #> 3 11220870802337 I 5 Express           959000 331932767 motorway TRUE    Flagge… #> 4 27100545508016 Aurora Avenue North    20000 457542648 trunk    TRUE    Not a … #> 5 10283859269900 NA                     73000  32222767 motorwa… TRUE    Not a … #> 6 68709974895651 NA                     30000 436165683 motorwa… TRUE    Not a … #> # … with 1 more variable: geom <LINESTRING [°]>, and abbreviated variable names #> #   ¹​flag_contains, ²​flag_highway  make_network_centroid_layer(   location = \"data/req_dev\"   ,folder = \"data_20230106_154119\"   ,network_object = replica_queried_network_links   ,auto_save = F ) #> Centroids were made using supplied spatial links network object... #> Error in gauntlet::st_true_midpoint(network_object) %>% select(!c(merge_id)): could not find function \"%>%\""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/query_network_trip_using_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Easily query and download Replica trip and network data using the extent of a map layer. — query_network_trip_using_bbox","title":"Easily query and download Replica trip and network data using the extent of a map layer. — query_network_trip_using_bbox","text":"function takes bounding box google big query inputs returns data back . Function currently works data using block groups hardcoded queries. Changes can made query polygon shapes can used. function creates log file records inputs, query sent Google, IDs Google table created multi-step query. information can accessed later points time. Table IDs log file can used auditing purposes copy pasted used Google Big Query console GUI.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/query_network_trip_using_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Easily query and download Replica trip and network data using the extent of a map layer. — query_network_trip_using_bbox","text":"","code":"query_network_trip_using_bbox(   bb_network_layer,   bb_sa_layer,   query_links = c(\"highway\", \"corridor\", \"road\", \"motorway\", \"motorway_link\", \"trunk\",     \"trunk_link\", \"primary\", \"primary_link\", \"secondary\", \"secondary_link\", \"tertiary\",     \"tertiary_link\"),   mode_type = c(\"PASSENGER_CAR\", \"PRIVATE_AUTO\", \"COMMERCIAL\", \"CARPOOL\", \"WALKING\",     \"BIKING\", \"PUBLIC_TRANSIT\", \"ON_DEMAND_AUTO\", \"OTHER_TRAVEL_MODE\"),   customer_name,   trip_table,   network_table,   file_destination,   query_network = T,   max_record = 1000 )"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/query_network_trip_using_bbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Easily query and download Replica trip and network data using the extent of a map layer. — query_network_trip_using_bbox","text":"bb_network_layer string relative path bounding box object detailing extent road network. used query trips . made using sf::st_bbox(). bb_sa_layer string relative path bounding box object detailing extent study area. used perform aggregations. made using sf::st_bbox(). input gernerally larger identical [bb_network_layer]. query_links vector character strings detailing type network links use query. used 1) depict network link volume graphics 2) filter trips . latter, trip uses road within study area including reporting. customer_name character string indicating Google account billed trip_table character string indicating trip table queried - location, year, quarter, day, etc match network_table. Please include entire table name well '[customer_name].[trip_table]' network_table character string indicating trip table queried - location, year, quarter, day, etc match trip_table. Please include entire table name well '[customer_name].[network_table]' file_destination character string indicating directory want log files data saved . new folder containg function outputs made named using convention 'data_[sys.datetime]' query_network boolean (T/F) indicating network downloaded function runtime. Default 'T'. can beneficial wait see many links downloaded netowrk downloaded, can also downloaded latter log files record big query table IDs. max_record integer indicating max number records written data acquired Google - default 1000, use Inf want limit download. Useful want check data first downloading large amounts data. Google tables still made full can manually acquired without rerunning function - see log files.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/query_network_trip_using_bbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Easily query and download Replica trip and network data using the extent of a map layer. — query_network_trip_using_bbox","text":"return objects R. Function creates log file data folder destination CSV format.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/query_network_trip_using_bbox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Easily query and download Replica trip and network data using the extent of a map layer. — query_network_trip_using_bbox","text":"","code":"#none"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/replica_temp_tbl_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract project name, dataset, and tablename from google big query object. — replica_temp_tbl_name","title":"Extract project name, dataset, and tablename from google big query object. — replica_temp_tbl_name","text":"BQuery objects (tables) made using bq_project_query() given temporary dataset table names. function extracts table's identifying elements glues singular string. string can used subsequent queires.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/replica_temp_tbl_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract project name, dataset, and tablename from google big query object. — replica_temp_tbl_name","text":"","code":"replica_temp_tbl_name(object)"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/replica_temp_tbl_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract project name, dataset, and tablename from google big query object. — replica_temp_tbl_name","text":"object","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/replica_temp_tbl_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract project name, dataset, and tablename from google big query object. — replica_temp_tbl_name","text":"character string","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/replica_temp_tbl_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract project name, dataset, and tablename from google big query object. — replica_temp_tbl_name","text":"Function helpful making mulitstepped queries temporary tables created subsequently interacted .","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/replica_temp_tbl_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract project name, dataset, and tablename from google big query object. — replica_temp_tbl_name","text":"","code":"temp = list(username = \"replica_fake_name\" ,dataset = \"replica_temp_dataset\" ,table = \"replica_temp_table\")  replica_temp_tbl_name(temp) #> Error in str_glue(\"{object[[1]]}.{object[[2]]}.{object[[3]]}\"): could not find function \"str_glue\""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anl.html","id":null,"dir":"Reference","previous_headings":"","what":"Make interactive network link volume maps using MapView. — viz_static_ntwrk_map_anl","title":"Make interactive network link volume maps using MapView. — viz_static_ntwrk_map_anl","text":"helper function quickly makes interactive map aggregated network link volumes. functions viz_static_ntwrk_map_ another mapping option wish map network links view link volumes without making interactive, HTML elements.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make interactive network link volume maps using MapView. — viz_static_ntwrk_map_anl","text":"","code":"viz_static_ntwrk_map_anl(spatial_agg_object)"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make interactive network link volume maps using MapView. — viz_static_ntwrk_map_anl","text":"spatial_agg_object spatial links objects aggregated network. links, centroids print aesthetic options Mapview code specific links.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make interactive network link volume maps using MapView. — viz_static_ntwrk_map_anl","text":"leaflet object made using MapView API depicting links","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make interactive network link volume maps using MapView. — viz_static_ntwrk_map_anl","text":"ANLT (Aggregated Network Links).","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make interactive network link volume maps using MapView. — viz_static_ntwrk_map_anl","text":"","code":"data_temp = aggregate_network_links( agg_count_object = table_agg_by_link_subset_limited ,network_object = replica_queried_network_links ) #> Aggregations will be made using supplied network object... #> Error in agg_count_object %>% mutate(flag_trip_type = str_glue(\"{flag_sa_origin}-{flag_sa_destination}\"),     network_link_ids_unnested = str_trunc(network_link_ids_unnested,         14, \"right\", \"\")): could not find function \"%>%\"  viz_static_ntwrk_map_anltpt(   spatial_agg_object = data_temp   ) #> Error in spatial_agg_object[[\"agg_link_flag\"]] %>% mutate(lwd_rescale = rescale_to(count,     10)): could not find function \"%>%\""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anlt.html","id":null,"dir":"Reference","previous_headings":"","what":"Make interactive network link volume maps using MapView - maps ANLT network links (Aggregated Network Links by vehicle Type). — viz_static_ntwrk_map_anlt","title":"Make interactive network link volume maps using MapView - maps ANLT network links (Aggregated Network Links by vehicle Type). — viz_static_ntwrk_map_anlt","text":"helper function quickly makes interactive map aggregated network link volumes. functions viz_static_ntwrk_map_ another mapping option wish map network links view link volumes without making interactive, HTML elements.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anlt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make interactive network link volume maps using MapView - maps ANLT network links (Aggregated Network Links by vehicle Type). — viz_static_ntwrk_map_anlt","text":"","code":"viz_static_ntwrk_map_anlt(spatial_agg_object)"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anlt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make interactive network link volume maps using MapView - maps ANLT network links (Aggregated Network Links by vehicle Type). — viz_static_ntwrk_map_anlt","text":"spatial_agg_object spatial links objects aggregated network. links, centroids print aesthetic options Mapview code specific links.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anlt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make interactive network link volume maps using MapView - maps ANLT network links (Aggregated Network Links by vehicle Type). — viz_static_ntwrk_map_anlt","text":"leaflet object made using MapView API depicting links","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anlt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make interactive network link volume maps using MapView - maps ANLT network links (Aggregated Network Links by vehicle Type). — viz_static_ntwrk_map_anlt","text":"","code":"data_temp = aggregate_network_links( agg_count_object = table_agg_by_link_subset_limited ,network_object = replica_queried_network_links ) #> Aggregations will be made using supplied network object... #> Error in agg_count_object %>% mutate(flag_trip_type = str_glue(\"{flag_sa_origin}-{flag_sa_destination}\"),     network_link_ids_unnested = str_trunc(network_link_ids_unnested,         14, \"right\", \"\")): could not find function \"%>%\"  viz_static_ntwrk_map_anlt(   spatial_agg_object = data_temp   ) #> Error in spatial_agg_object[[\"agg_link_vehicle_type\"]] %>% mutate(lwd_rescale = rescale_to(count,     10)): could not find function \"%>%\""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anlto.html","id":null,"dir":"Reference","previous_headings":"","what":"Make interactive network link volume maps using MapView - maps ANLT network links (Aggregated Network Links by vehicle Type and Origin poly). — viz_static_ntwrk_map_anlto","title":"Make interactive network link volume maps using MapView - maps ANLT network links (Aggregated Network Links by vehicle Type and Origin poly). — viz_static_ntwrk_map_anlto","text":"helper function quickly makes interactive map aggregated network link volumes. functions viz_static_ntwrk_map_ another mapping option wish map network links view link volumes without making interactive, HTML elements.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anlto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make interactive network link volume maps using MapView - maps ANLT network links (Aggregated Network Links by vehicle Type and Origin poly). — viz_static_ntwrk_map_anlto","text":"","code":"viz_static_ntwrk_map_anlto(spatial_agg_object)"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anlto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make interactive network link volume maps using MapView - maps ANLT network links (Aggregated Network Links by vehicle Type and Origin poly). — viz_static_ntwrk_map_anlto","text":"spatial_agg_object spatial links objects aggregated network. links, centroids print aesthetic options Mapview code specific links.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anlto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make interactive network link volume maps using MapView - maps ANLT network links (Aggregated Network Links by vehicle Type and Origin poly). — viz_static_ntwrk_map_anlto","text":"leaflet object made using MapView API depicting links","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anlto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make interactive network link volume maps using MapView - maps ANLT network links (Aggregated Network Links by vehicle Type and Origin poly). — viz_static_ntwrk_map_anlto","text":"","code":"data_temp = aggregate_network_links( agg_count_object = table_agg_by_link_subset_limited ,network_object = replica_queried_network_links ) #> Aggregations will be made using supplied network object... #> Error in agg_count_object %>% mutate(flag_trip_type = str_glue(\"{flag_sa_origin}-{flag_sa_destination}\"),     network_link_ids_unnested = str_trunc(network_link_ids_unnested,         14, \"right\", \"\")): could not find function \"%>%\"  viz_static_ntwrk_map_anlto(   spatial_agg_object = data_temp   ) #> Error in spatial_agg_object[[\"agg_link_vehicle_type_origin\"]] %>% na.omit() %>%     filter(origin_poly %in% as.character(poi_list$id)) %>% merge(poi_list %>%     mutate(id = as.character(id)), by.x = \"origin_poly\", by.y = \"id\",     all.x = T) %>% mutate(lwd_rescale = rescale_to(count, 10)): could not find function \"%>%\""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anlto_grp.html","id":null,"dir":"Reference","previous_headings":"","what":"Make interactive network link volume maps using MapView - maps ANLT network links (Aggregated Network Links by vehicle Type and Origin poly). — viz_static_ntwrk_map_anlto_grp","title":"Make interactive network link volume maps using MapView - maps ANLT network links (Aggregated Network Links by vehicle Type and Origin poly). — viz_static_ntwrk_map_anlto_grp","text":"helper function quickly makes interactive map aggregated network link volumes. functions viz_static_ntwrk_map_ another mapping option wish map network links view link volumes without making interactive, HTML elements.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anlto_grp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make interactive network link volume maps using MapView - maps ANLT network links (Aggregated Network Links by vehicle Type and Origin poly). — viz_static_ntwrk_map_anlto_grp","text":"","code":"viz_static_ntwrk_map_anlto_grp(spatial_agg_object)"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anlto_grp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make interactive network link volume maps using MapView - maps ANLT network links (Aggregated Network Links by vehicle Type and Origin poly). — viz_static_ntwrk_map_anlto_grp","text":"spatial_agg_object spatial links objects aggregated network. links, centroids print aesthetic options Mapview code specific links.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anlto_grp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make interactive network link volume maps using MapView - maps ANLT network links (Aggregated Network Links by vehicle Type and Origin poly). — viz_static_ntwrk_map_anlto_grp","text":"leaflet object made using MapView API depicting links","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anlto_grp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make interactive network link volume maps using MapView - maps ANLT network links (Aggregated Network Links by vehicle Type and Origin poly). — viz_static_ntwrk_map_anlto_grp","text":"","code":"data_temp = aggregate_network_links( agg_count_object = table_agg_by_link_subset_limited ,network_object = replica_queried_network_links ) #> Aggregations will be made using supplied network object... #> Error in agg_count_object %>% mutate(flag_trip_type = str_glue(\"{flag_sa_origin}-{flag_sa_destination}\"),     network_link_ids_unnested = str_trunc(network_link_ids_unnested,         14, \"right\", \"\")): could not find function \"%>%\"  viz_static_ntwrk_map_anlto_grp(   spatial_agg_object = data_temp   ) #> Error in spatial_agg_object[[\"agg_link_vehicle_type_origin\"]] %>% na.omit() %>%     filter(origin_poly %in% as.character(poi_list$id)) %>% merge(poi_list %>%     mutate(id = as.character(id)), by.x = \"origin_poly\", by.y = \"id\",     all.x = T) %>% mutate(lwd_rescale = rescale_to(count, 10)): could not find function \"%>%\""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anltpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Make interactive network link volume maps using MapView - maps ANLTPT network links (Aggregated Network Links by TriP Type ). — viz_static_ntwrk_map_anltpt","title":"Make interactive network link volume maps using MapView - maps ANLTPT network links (Aggregated Network Links by TriP Type ). — viz_static_ntwrk_map_anltpt","text":"helper function quickly makes interactive map aggregated network link volumes. functions viz_static_ntwrk_map_ another mapping option wish map network links view link volumes without making interactive, HTML elements.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anltpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make interactive network link volume maps using MapView - maps ANLTPT network links (Aggregated Network Links by TriP Type ). — viz_static_ntwrk_map_anltpt","text":"","code":"viz_static_ntwrk_map_anltpt(spatial_agg_object)"},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anltpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make interactive network link volume maps using MapView - maps ANLTPT network links (Aggregated Network Links by TriP Type ). — viz_static_ntwrk_map_anltpt","text":"spatial_agg_object spatial links objects aggregated network. links, centroids print aesthetic options Mapview code specific links.","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anltpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make interactive network link volume maps using MapView - maps ANLTPT network links (Aggregated Network Links by TriP Type ). — viz_static_ntwrk_map_anltpt","text":"leaflet object made using MapView API depicting links","code":""},{"path":"https://michaelgaunt404.github.io/replicaToolkitR/reference/viz_static_ntwrk_map_anltpt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make interactive network link volume maps using MapView - maps ANLTPT network links (Aggregated Network Links by TriP Type ). — viz_static_ntwrk_map_anltpt","text":"","code":"data_temp = aggregate_network_links( agg_count_object = table_agg_by_link_subset_limited ,network_object = replica_queried_network_links ) #> Aggregations will be made using supplied network object... #> Error in agg_count_object %>% mutate(flag_trip_type = str_glue(\"{flag_sa_origin}-{flag_sa_destination}\"),     network_link_ids_unnested = str_trunc(network_link_ids_unnested,         14, \"right\", \"\")): could not find function \"%>%\"  viz_static_ntwrk_map_anltpt(   spatial_agg_object = data_temp   ) #> Error in spatial_agg_object[[\"agg_link_flag\"]] %>% mutate(lwd_rescale = rescale_to(count,     10)): could not find function \"%>%\""}]
